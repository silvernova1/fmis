@model fmis.Models.John.FundSource
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@using System.Text.Json;

@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<style>

    .select2-selection__rendered {
        line-height: 31px !important;
    }

    .select2-container .select2-selection--single {
        height: 35px !important;
    }

    .select2-selection__arrow {
        height: 34px !important;
    }


</style>
<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="FundSourceId" value="@Model.FundSourceId" />
    <input type="hidden" asp-for="BudgetAllotmentId" value="@Model.BudgetAllotmentId" />
    <input type="hidden" asp-for="AllotmentClassId" value="@ViewBag.AllotmentClassId" />
    <input type="hidden" asp-for="AppropriationId" value="@ViewBag.AppropriationId" />
    <input type="hidden" class="fundsource_amount_uacs" value="@JsonSerializer.Serialize(Model.FundSourceAmounts)">
    <input type="hidden" class="uacs" value="@ViewBag.uacs">
    <input type="hidden" class="fundsource_token" value="@Model.token">
    @*<input type="hidden" asp-for="Created_At"/>*@
    <div class="alert alert-success no-margin alert-dismissable" style="margin-top:10px;">
        <h7><i class="fa fa-bar-chart-o fa-fw"></i> Edit Budget Source (Fund Source)</h7>
        <div class="pull-right">
            <div class="btn-group">
                <input type="submit" value="Save" class="btn btn-success btn-xs" />
                <a class="btn btn-danger btn-xs" data-dismiss="modal">Exit</a>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label>Fund Source: </label>
                <select class="form-control" asp-for="FundId" asp-items="ViewBag.FundId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Prexc" class="control-label"></label>
                @*@Html.DropDownList("PrexcId", null, htmlAttributes: new { @class = "prexcDropdown form-control", @Id = "ddlBranches", onchange = "return get_sbu(this)" })*@
                <select class="form-control select2" asp-for="PrexcId" asp-items="ViewBag.PrexcId " id="ddlBranches" , onchange="return get_sbu(this)"> </select>
            </div>
            <div class="form-group">
                <label>PAP Type: </label>
                <input asp-for="PapType" id="pap_type" class="form-control" readonly />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label>Respo Center: </label>
                <select class="form-control" asp-for="RespoId" asp-items="ViewBag.RespoId"></select>
            </div>
            <div class="form-group">
                <label asp-for="FundSourceTitle" class="control-label"></label>
                <input asp-for="FundSourceTitle" class="form-control" />
                <span asp-validation-for="FundSourceTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FundSourceTitleCode" class="control-label"></label>
                <input asp-for="FundSourceTitleCode" id="pap_code1" class="form-control" readonly />
                <span asp-validation-for="FundSourceTitleCode" class="text-danger"></span>
            </div>

        </div>
    </div>
    <br />
    <input id="search_field2" style="float: left" type="search" hidden placeholder="Search" />
    <div id="fundsource_amount_edit" class="hot handsontable htColumnHeaders"></div>
    <br />
    <div class="controls" hidden>
        <button id="export-file">Download CSV</button>
    </div>

    <div class="infobox infobox-green pull-right">
        <div class="infobox-icon">
            <i class="ace-icon fa fa-money"></i>
        </div>
        <div class="infobox-data">
            <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                <span id="sub_total_amt">₱0.00</span>
            </span>
            <div class="infobox-content">
                <span class="label label-success arrowed-in arrowed-in-right"> Sub Total Amount </span>
            </div>
        </div>
    </div>

</form>

<script>
  $(document).ready(function () {
      $('.select2').select2();
    });
    function get_sbu() {
        var selected_val = $('#ddlBranches').find(":selected").attr('value');
        $.ajax({
            type: "POST",
            url: '@Url.Action("selectAT", "FundSource")',
            data: "id=" + selected_val,
            success: function (data) {
                if (data.length > 0) {
                    $('#pap_code1').val(data[0].pap_code1);
                    $('#pap_type').val(data[0].pap_type);
                }
                else {
                    $('#pap_code1').val('');
                    $('#pap_type').val('');
                }
            }
        });
    }


    let str = "\u20B1"

    var CHECK_AFTER_ROW = false;
    var CHECK_FIRST_ROW = false;
    var fundsource_id = @Model.FundSourceId;
    var BudgetAllotmentId = @Model.BudgetAllotmentId;
    var fundsource_token = $(".fundsource_token").val();
    let guid = () => {
    let s4 = () => {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    }
    function ajaxServer(ajax_data, url) {
        $.ajax({
            type: 'POST',
            url: url,
            headers: { "RequestVerificationToken": '@GetAntiXsrfRequestToken()' },
            data: { data: ajax_data },
            success: function (output) {
                $('#loading_modal').modal('hide');
                console.log(output);
            }
        });
    }
    $(".obligation_amount").html(obligation_amount);
    var uacs = $.parseJSON($(".uacs").val());
    var uacs_data_dropdown = [];
    var uacs_data_array = [];
    var get_account_title = [];
    var uacs_counter = 0;
    $.each(uacs, function () {
        uacs_data_dropdown[uacs_counter] = this.Account_title;
        var json_data = new Object();
        json_data.UacsId = this.UacsId;
        uacs_data_array[this.Account_title] = json_data;
        get_account_title[this.UacsId] = this.Account_title;
        uacs_counter++;
    });
    var fundsource_amount_uacs = $.parseJSON($(".fundsource_amount_uacs").val());
    const data = [];
    var counter = 0;
    var obligation_amount = 0;
    var total_uacs_amount = 0; 
    $.each(fundsource_amount_uacs, function () {
        data[counter] = [get_account_title[this.UacsId], this.beginning_balance,this.fundsource_amount_token, this.fundsource_token]
        counter++;

        obligation_amount += this.beginning_balance;

    });


    $('#sub_total_amt').html(str + obligation_amount.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ','));

    const searchField = document.querySelector('#search_field2');
    const button = document.querySelector('#export-file');
    const container = document.getElementById('fundsource_amount_edit');
    const hot = new Handsontable(container, {
        data: data,
        className: 'htLeft',
        rowHeaders: true,
        colHeaders: true,
        colWidths: [150, 150],
        colHeaders: ['EXPENSE TITLE', 'AMOUNT', 'ID', 'TOKEN'],
        columns: [
            {
                type: 'dropdown',
                source: uacs_data_dropdown
            },
            {
                type: 'numeric',
                numericFormat: {
                    pattern: '0,0.00',
                },
            },
            {
                //HIDDEN ID
            },
            {
                //HIDDEN TOKEN
            },
        ],
        stretchH: 'all',
        height: '450',
        search: {
            searchResultClass: 'search-result-custom'
        },
        contextMenu: ['row_above', 'row_below', 'remove_row'],
        beforeRemoveRow: function (index, column) {
        var selection = this.getSelected();
            var holder_data = this.getData();
            var single_token = holder_data[selection[0][0]][2];
            console.log(selection);
            console.log(holder_data);
            console.log(column);
            var first_column = selection[0][0];
            var last_column = selection[0][2];
            console.log(first_column);
            console.log(last_column);
            var many_token = [];
            for (var j = first_column; j <= last_column; j++) {
                many_token.push({
                    many_token: holder_data[j][2]
                })
            }
            if (single_token) {
                var ajax_data = {
                    "single_token": single_token,
                    "many_token": many_token,
                };
                console.log(ajax_data);
                ajaxServer(ajax_data, '@Url.Action("DeleteFundsourceamount", "FundSource")');
            }
        },
        afterRemoveRow: function () {
            var sub_total = 0;
            $.each(this.getData(), function () { sub_total += this[1]; });
            $('#sub_total_amt').html(str + sub_total.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ','));
        },
        afterUndo: function (index, column) {
        },
        afterCreateRow: function (row, column) {
            CHECK_FIRST_ROW = true;
            console.log(generate_token());
            hot.setDataAtCell(row, 2, generate_token());
        },
        afterChange: function (changes, source) {
            if (!changes || source === 'loadData' || CHECK_AFTER_ROW) {
                CHECK_AFTER_ROW = false;
                return;
            }
            changes.forEach(([row, col, oldValue, newValue]) => {
                if (col == 0) {
                    var ajax_data = [];
                    ajax_data.push(
                        {
                            FundSourceId: fundsource_id,
                            BudgetAllotmentId: BudgetAllotmentId,
                            UacsId: uacs_data_array[hot.getDataAtCell(row, col)].UacsId,
                            Amount: hot.getDataAtCell(row, col + 1),
                            fundsource_amount_token: hot.getDataAtCell(row, col+2),
                            fundsource_token: fundsource_token
                        }
                    );
                    @*console.log(hot.getSourceData());*@
                    ajaxServer(ajax_data, '@Url.Action("SaveFundsourceamount", "FundSource")');
                    CHECK_FIRST_ROW = true;
                }
            });
            if (CHECK_FIRST_ROW) {
                CHECK_FIRST_ROW = false; //TRAP THE DOUBLE LOAD IN FIRST ROW
            } else {
                var ajax_data = [];
                $.each(hot.getSourceData(), function () {
                    ajax_data.push({
                        FundSourceId: fundsource_id,
                        BudgetAllotmentId: BudgetAllotmentId,
                        UacsId: uacs_data_array[this[0]].UacsId,
                        Amount: this[1],
                        fundsource_amount_token: this[2],
                        fundsource_token: fundsource_token
                    });
                });
        
                let str = "\u20B1"
                var sub_total = 0;

                $.each(this.getData(), function () { sub_total += this[1]; });
                $('#sub_total_amt').html(str + sub_total.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ','));
                ajaxServer(ajax_data, '@Url.Action("SaveFundsourceamount", "FundSource")');
            }
		},
        hiddenColumns: {
            columns: [2,3],
            indicators: true
        },
        licenseKey: 'non-commercial-and-evaluation', // for non-commercial use only
    });
    var tableData = JSON.stringify(hot.getSourceData());
    console.log(hot.getSourceData());
</script>