@model IEnumerable<fmis.Models.Utilization>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Utilization</h2>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" />

<style>
    .search-result-custom {
        color: #ff0000;
        font-weight: 900;
    }

    .htCore tbody tr td, .htCore thead tr th, body {
    }


    .htCore thead tr th {
        color: #fff;
        font-size: 13px;
        background-color: #2ECC71
    }
</style>


<input type="hidden" class="utilization" value="@ViewBag.temp">
<br />
<input id="search_field2" style="float: left" type="search" placeholder="Search" />
<br />
<br />
<br />
<div id="example" class="hot"></div>
<br />
<div class="controls" hidden>
    <button id="export-file">Download CSV</button>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <h4 style="margin-top:20px; margin-left:20px; ">Uacs Amount Entry / Disbursement</h4>
            <div class="modal-body ObligationModal">



            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-success">Save</button>
                <button type="button" data-dismiss="modal" class="btn btn-sm btn-default">Close</button>
            </div>
        </div>
    </div>
</div>


<script>

    document.onkeydown = function (e) {
        if (e.ctrlKey && e.keyCode === 83) {
            $('#loading_modal').modal('show');

            var json = [];
            $.each(hot.getSourceData(), function () {
                json.push({ Date: this[0], Dv: this[1], Pr_no: this[2], Po_no: this[3], Payer: this[4], Address: this[5], Particulars: this[6], Ors_no: this[7], Fund_source: this[8], Gross: this[9], Created_by: this[10], Date_recieved: this[11], Time_recieved: this[12], Date_released: this[13], Time_released: this[14], Id: this[15] } );
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveUtilization", "Utilization")',
                dataType: "JSON",
                data: { data: json },
                success: function (output) {
                    $('#loading_modal').modal('hide');
                    Lobibox.notify("success", {
                        msg: "Successfully Saved...",
                        sound: false
                    });
                    console.log(output);
                }
            });

            return false;
        }
    };


    var utilization = $.parseJSON($(".utilization").val());

    const data = [];
    var counter = 0;
    $.each(utilization, function () {
        data[counter] = [this.Date, this.Dv, this.Pr_no, this.Po_no, this.Payer, this.Address, this.Particulars, this.Ors_no, this.Fund_source, this.Gross, this.Created_by, this.Date_recieved, this.Time_recieved, this.Date_released, this.Time_released, this.Id]
        counter++;
    })
    const searchField = document.querySelector('#search_field2');
    const button = document.querySelector('#export-file');
    const container = document.getElementById('example');
    const hot = new Handsontable(container, {
        data: data,
        width: '100%',
        colWidths: 105,
        rowHeaders: true,
        colHeaders: true,
        search: {
            searchResultClass: 'search-result-custom'
        },
        contextMenu: ['row_above', 'row_below', 'remove_row'],
        beforeRemoveRow: function (index, column) {
            var selection = this.getSelected();
            var holder_data = this.getData();
            var holder_id = holder_data[selection[0][0]][15]

            if (holder_id) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteUtilization", "Utilization")',
                    dataType: "JSON",
                    data: { id: holder_id },
                    success: function (output) {
                        console.log(output);
                    }
                });
            }

            Lobibox.notify("warning", {
                msg: "Your selected row was remove",
                sound: false
            });

        },
        height: 'auto',
        hiddenColumns: {
            columns: [15],
            indicators: true
        },
        licenseKey: 'non-commercial-and-evaluation', // for non-commercial use only
        dataSchema: { Date: null, Dv: null, Pr_no: null, Po_no: null, Payer: null, Address: null, Particulars: null, Ors_no: null, Fund_source: null, Gross: null, Created_by: null, Date_recieved: null, Time_recieved: null, Date_released: null, Time_released: null },
        columns: [
            { data: 'Date ', type: 'date' },
            { data: 'Dv', type: 'text' },
            { data: 'Pr_no', type: 'text' },
            { data: 'Po_no', type: 'text' },
            { data: 'Payee', type: 'text' },
            { data: 'Address', type: 'text' },
            { data: 'Particulars', type: 'text' },
            { data: 'Ors_no', type: 'numeric' },
            { data: 'Fund_source', type: 'text' },
            { data: 'Gross', type: 'text' },
            { data: 'Created_by', type: 'text' },
            { data: 'Date_recieved', type: 'text' },
            { data: 'Time_recieved', type: 'text' },
            { data: 'Date_released', type: 'text' },
            { data: 'Time_released', type: 'text' },
            { data: 'Id ', type: 'text' }

        ]
    });

    Handsontable.dom.addEvent(searchField, 'keyup', function (event) {
        const search = hot.getPlugin('search');
        const queryResult = search.query(this.value);

        console.log(queryResult);
        hot.render();
    });

    const exportPlugin = hot.getPlugin('exportFile');

    button.addEventListener('click', () => {
        exportPlugin.downloadFile('csv', {
            bom: false,
            columnDelimiter: ',',
            columnHeaders: true,
            exportHiddenColumns: true,
            exportHiddenRows: true,
            fileExtension: 'csv',
            filename: 'PREXC',
            mimeType: 'text/csv',
            rowDelimiter: '\r\n',
            rowHeaders: true
        });
    });

    hot.updateSettings({
        colHeaders: ['DATE', 'DV', 'PR #', 'PO #', 'PAYER', 'ADDRESS', 'PARTICULARS', 'ORS #', 'FUND SOURCE', 'GROSS', 'CREATED BY', 'DATE RECEIVED', 'TIME RECEIVED', 'DATE RELEASED', 'TIME RELEASED', 'ID'],
        cell: [
            {
                row: 0,
                col: 0,
                className: 'custom-cell',
            },
        ],
        columns: [
            {
                type: 'date',
                dateFormat: 'MM/DD/YYYY',
            },
            {
               
            },
            {

            },
            {

            },
            {

            },
            {

            },
            {

            },

            {

            },

            {
                type: 'dropdown',
                source: ['Rusel', 'John', 'Carlo', 'Arnel', 'Amalio']
            },

            {
            },

            {
            },

            {
                type: 'date',
                dateFormat: 'MM/DD/YYYY',
            },

            {
                type: 'time',
                timeFormat: 'h:mm:ss a',
                correctFormat: true
            },

            {
                type: 'date',
                dateFormat: 'MM/DD/YYYY',
            },

            {
                type: 'time',
                timeFormat: 'h:mm:ss a',
                correctFormat: true
            },

            {

            },

        ]
    });

    var tableData = JSON.stringify(hot.getSourceData());
    console.log(hot.getSourceData());


</script>
