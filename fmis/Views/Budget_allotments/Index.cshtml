@model IEnumerable<fmis.Models.Budget_allotment>
@using System.Globalization;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3 class="grey lighter smaller">
    Budget Allotments
</h3>
<hr />
<div class="row  pull-left">
    <div class="space-5"></div>
    <div class="col-xs-12 infobox-container">
            <div class="infobox infobox-green">
                <div class="infobox-icon">
                    <i class="ace-icon fa fa-money"></i>
                </div>
                <div class="infobox-data">
                    <span class="infobox-data-number">@ViewBag.totalbudget</span>
                    <div class="infobox-content grey">BEGINNING BALANCE</div>
                </div>
            </div>
            <div class="infobox infobox-red">
                <div class="infobox-icon">
                    <i class="ace-icon fa fa-calculator"></i>
                </div>

                <div class="infobox-data">
                    <span class="infobox-data-number">@ViewBag.totalbud</span>
                    <div class="infobox-content grey">REMAINING BALANCE</div>
                </div>
            </div>
        </div>
    <div class="vspace-12-sm"></div>
</div><!-- /.row -->
            
<br /><br />
<br /><br />
<div>
    <a class=" btn btn-sm btn-success" asp-action="Create">
        <i class="ace-icon fa fa-plus "></i>Create New
    </a>
</div>
<br />
<table class="table">
    <thead>
        <tr>
            <th>
                Year
            </th>
            <th>
                Allotment Series
            </th>
            <th>
                Allotment Title
            </th>
            <th>
                Allotment Code
            </th>
            <th>For Fund Source</th>
            <th>For Sub-Allotment</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Yearly_reference.YearlyReference)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Allotment_series)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Allotment_title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Allotment_code)
                </td>
                <td>
                    <a class="btn btn-sm btn-default" asp-action="Fundsource" asp-route-BudgetId="@item.BudgetAllotmentId">
                        <i class="ace-icon fa fa-arrow-right"></i>Fund Source
                    </a>
                    <br />
                    <span class="grey">BB: </span>
                    @{
                        var amount = (List<fmis.Models.John.FundSourceAmount>)ViewBag.Query;
                    }

                <b class="green">@amount.FirstOrDefault(x => x.BudgetId == item.BudgetAllotmentId)?.Amount.ToString("C", new CultureInfo("en-PH"))</b>
                    <br />
                    <span class="grey">RB: </span>
                    <b class="red">0.00</b>
                </td>
                <td>
                    <a class="btn btn-sm btn-default" asp-action="Suballotment" asp-route-id="@item.BudgetAllotmentId">
                        <i class="ace-icon fa fa-plus"></i>Sub-Allotment
                    </a>
                    <br />
                    <span class="grey">BB: </span>
                    <b class="green">00</b>
                    <br />
                    <span class="grey">RB: </span>
                    <b class="red">0.00</b>
                </td>
                <td>
                    <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.BudgetAllotmentId">
                        <i class="ace-icon fa fa-edit"></i>Edit
                    </a>

                    <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.BudgetAllotmentId">
                        <i class="ace-icon fa fa-trash"></i>Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@*@*<script type="text/javascript">
        jQuery(function ($) {
            $('.easy-pie-chart.percentage').each(function () {
                var $box = $(this).closest('.infobox');
                var barColor = $(this).data('color') || (!$box.hasClass('infobox-dark') ? $box.css('color') : 'rgba(255,255,255,0.95)');
                var trackColor = barColor == 'rgba(255,255,255,0.95)' ? 'rgba(255,255,255,0.25)' : '#E2E2E2';
                var size = parseInt($(this).data('size')) || 50;
                $(this).easyPieChart({
                    barColor: barColor,
                    trackColor: trackColor,
                    scaleColor: false,
                    lineCap: 'butt',
                    lineWidth: parseInt(size / 10),
                    animate: ace.vars['old_ie'] ? false : 1000,
                    size: size
                });
            })



            //flot chart resize plugin, somehow manipulates default browser resize event to optimize it!
            //but sometimes it brings up errors with normal resize event handlers
            $.resize.throttleWindow = false;

            var placeholder = $('#piechart-placeholder').css({ 'width': '90%', 'min-height': '80px' });
            var data = [

                { label: "Beginning Balance", data: 80, color: "#82af6f" },
                { label: "Remaining Balance", data: 20, color: "#DA5430" },
            ]
            function drawPieChart(placeholder, data, position) {
                $.plot(placeholder, data, {
                    series: {
                        pie: {
                            show: true,
                            tilt: 0.8,
                            highlight: {
                                opacity: 0.25
                            },
                            stroke: {
                                color: '#fff',
                                width: 2
                            },
                            startAngle: 2
                        }
                    },
                    legend: {
                        show: true,
                        position: position || "ne",
                        labelBoxBorderColor: null,
                        margin: [-30, 15]
                    }
                    ,
                    grid: {
                        hoverable: true,
                        clickable: true
                    }
                })
            }
            drawPieChart(placeholder, data);

            /**
            we saved the drawing function and the data to redraw with different position later when switching to RTL mode dynamically
            so that's not needed actually.
            */
            placeholder.data('chart', data);
            placeholder.data('draw', drawPieChart);


            //pie chart tooltip example
            var $tooltip = $("<div class='tooltip top in'><div class='tooltip-inner'></div></div>").hide().appendTo('body');
            var previousPoint = null;

            placeholder.on('plothover', function (event, pos, item) {
                if (item) {
                    if (previousPoint != item.seriesIndex) {
                        previousPoint = item.seriesIndex;
                        var tip = item.series['label'] + " : " + item.series['percent'] + '%';
                        $tooltip.show().children(0).text(tip);
                    }
                    $tooltip.css({ top: pos.pageY + 10, left: pos.pageX + 10 });
                } else {
                    $tooltip.hide();
                    previousPoint = null;
                }

            });

        })
    </script>*@
