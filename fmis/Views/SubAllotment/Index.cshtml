@model fmis.Models.silver.BudgetAllotment
@using System.Globalization;
@{
    ViewData["Title"] = "SubAllotment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.SubAllotment.Count() > 0)
{
    <h3 class="grey lighter smaller">
        Sub Allotment
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Model.Yearly_reference.YearlyReference
        </small>
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Model.SubAllotment.FirstOrDefault().Appropriation.AppropriationSource
        </small>
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Model.SubAllotment.FirstOrDefault().AllotmentClass.Allotment_Class
        </small>

    </h3>
}
<hr />
<div class="row  pull-left">
    <div class="space-5"></div>

    <div class="col-xs-12 infobox-container">
        <div class="infobox infobox-green">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-money"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                    @Model.SubAllotment.Sum(x => x.Beginning_balance).ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-success arrowed-in arrowed-in-right"> Beginning Balance </span>
                </div>
            </div>
        </div>
        <div class="infobox infobox-red">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-calculator"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color: grey;">
                    @Model.SubAllotment.Sum(x => x.Remaining_balance).ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-danger arrowed-in arrowed-in-right"> Remaining Balance </span>
                </div>
            </div>
        </div>
     @*   <div class="infobox infobox-orange2">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-bar-chart-o"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                    @Model.SubAllotment.Sum(x => x.realignment_amount).ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-warning arrowed-in arrowed-in-right"> Realignment Amount </span>
                </div>
            </div>
        </div>*@
        <div class="infobox infobox-blue">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-bar-chart-o"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                    @Model.SubAllotment.Sum(x => x.obligated_amount).ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-primary arrowed-in arrowed-in-right"> Obligated Amount </span>
                </div>
            </div>
        </div>



    </div><!-- /.widget-body -->
</div>
<br />
<br />
<br />
<br />
<div class="modal" id="createModal" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body" id="suballotment_create">

            </div>
        </div>
    </div>
</div>

<div class="modal" id="editModal"  role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body" id="suballotment_edit">

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="DeleteModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">


        </div>
    </div>
</div>

<p>
    <button type="button" asp-controller="Sub_allotment" asp-action="Create" class="btn btn-success btn-sm" onclick="createSub_allotment(@Model.BudgetAllotmentId)">
        <i class="ace-icon fa fa-plus "></i>Create New
    </button> |
    <a class=" btn btn-primary btn-sm" asp-controller="BudgetAllotment" asp-action="Index">
        <span class="glyphicon glyphicon-arrow-left"></span> Back to Budget Allotment
    </a>
</p>
@if (Model.SubAllotment.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Pap Title
                </th>
                <th>
                    Sub Allotment Title
                </th>
                <th>
                    Description
                </th>
                <th>
                    Responsibility Center
                </th>
                <th>
                    Actions
                </th>
                <th>
                    Sub-Allotment (Realignment)
                </th>
                <th>
                    Beginning Balance
                </th>
                <th>
                    Remaining Balance
                </th>
                <th>
                    Obligated Amount
                </th>
                @if (@Model.SubAllotment.FirstOrDefault().AppropriationId == 2)
                {
                    <th>
                    Added to @ViewBag.result Allotment
                </th>
                }
                

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SubAllotment)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.prexc.pap_title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Suballotment_title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @item.RespoCenter.Respo
                </td>
                <td>
                    <button class="btn btn-primary btn-xs" onclick="getEditSub_allotment(@Model.BudgetAllotmentId,@item.SubAllotmentId)"><span class="glyphicon glyphicon-edit"></span></button>

                    <a asp-controller="Sub_allotment" asp-action="Delete" asp-route-id="@item.SubAllotmentId" asp-route-budget_id="@ViewBag.budget_id" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#DeleteModalCenter"> <span class="glyphicon glyphicon-trash"></span></a>
                </td>
                <td>
                    <a asp-controller="SubAllotment_Realignment" asp-route-sub_allotment_id="@item.SubAllotmentId" asp-route-BudgetId="@ViewBag.budget_id" asp-action="Index" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-transfer"></span> SAA-Realignment</a>
                </td>
                <td>
                    <b class="green">
                        <span>@item.Beginning_balance.ToString("C", new CultureInfo("en-PH"))</span>
                    </b>
                </td>
                <td>
                    <b class="red">
                        <span>@item.Remaining_balance.ToString("C", new CultureInfo("en-PH"))</span>
                    </b>
                </td>
                <td>
                    <b class="blue">
                        <span>@item.obligated_amount.ToString("C", new CultureInfo("en-PH"))</span>
                    </b>
                </td>
                @if (@Model.SubAllotment.FirstOrDefault().AppropriationId == 2)
                {
                <td>
                    @Html.CheckBoxFor(m =>@item.IsAddToNextAllotment, new { @disabled = "disabled" })
                </td>
                }
            </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-block alert-danger">
        <i class="ace-icon fa fa-warning red"></i>
        No Records found
    </div>
}

<script>
    function createSub_allotment(BudgetAllotmentId) {
         $("#createModal").modal({ backdrop: 'static', keyboard: false });
         $("#suballotment_create").html(loading);
         var AllotmentClassId = @ViewBag.AllotmentClassId;
         var AppropriationId = @ViewBag.AppropriationId;
         var url = '@Url.Action("Create", "SubAllotment")';
         url += "?AllotmentClassId="+AllotmentClassId+"&AppropriationId="+AppropriationId+"&BudgetAllotmentId=" + BudgetAllotmentId;
         console.log(url);
         $.get(url, function (result) {
            setTimeout(function () {
                $("#suballotment_create").html(result);
            }, 500);
         });
    }

    function getEditSub_allotment(BudgetAllotmentId, sub_allotment_id) {
        $("#editModal").modal({ backdrop: 'static', keyboard: false });
        $("#suballotment_edit").html(loading);
        var AllotmentClassId = @ViewBag.AllotmentClassId;
        var AppropriationId = @ViewBag.AppropriationId;
        var url = '@Url.Action("Edit", "SubAllotment")';
        //url += "?budget_id=" + BudgetAllotmentId + "&sub_allotment_id=" + sub_allotment_id
        url += "?AllotmentClassId=" + AllotmentClassId + "&AppropriationId=" + AppropriationId + "&BudgetAllotmentId=" + BudgetAllotmentId + "&sub_allotment_id=" + sub_allotment_id ;
         $.get(url, function (result) {
            setTimeout(function () {
                $("#suballotment_edit").html(result);
            }, 500);
         });
        }

    function deleteSub_allotment(BudgetAllotmentId) {
        $("#deleteModal").modal({ backdrop: 'static', keyboard: false });
        $("#suballotment_delete").html(loading);
        var url = '@Url.Action("Delete", "SubAllotment")';
        url += "?budget_id=" + BudgetAllotmentId
        $.get(url, function (result) {
        setTimeout(function () {
            $("#suballotment_delete").html(result);
        }, 500);
        });
     }

    let generate_token = () => {
        let s4 = () => {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    }

    function subAllotmentToken() {
        suballotment_token = generate_token();
        $("#subs_input_token").val(suballotment_token);
    }
</script>
