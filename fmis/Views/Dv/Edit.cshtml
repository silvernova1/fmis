@model fmis.Models.Accounting.Dv;


<style>
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }
</style>

<button type="button" style="margin-right:15px; margin-top: 10px;" class="close" data-dismiss="modal">×</button>
<center><h3 class="grey lighter smaller">Edit Disbursement Voucher </h3></center>
<hr />
<div class="container" style="height: 350px;">
    <form asp-action="Edit">
        <div class="col-md-4" style="margin-left: 50px;">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DvId" />
            <div class="form-group">
                <h5>Fund Cluster: </h5>
                @Html.DropDownList("FundClusterId", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="form-group">
                <h5>Dv Type: </h5>
                <select class="form-control" id="dv_type" required>
                    <option value="">Select Dv Type</option>
                    <option value="S">SUPPLIER</option>
                    <option value="T">REGULAR</option>
                </select>
            </div>
            <div class="form-group">
                <h5>Dv #: </h5>
                <input asp-for="DvNo" type="text" id="dv_no" class="form-control" readonly />
                <span asp-validation-for="DvNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <h5>Particulars:  </h5>
                <input asp-for="Particulars" type="text" class="form-control" />
                <span asp-validation-for="Particulars" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <h5>Date: </h5>
                <input asp-for="Date" type="date" asp-format="{0:yyyy-MM-dd}" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <h5>Payee: </h5>
                <input asp-for="Payee" class="form-control" />
                <span asp-validation-for="Payee" class="text-danger"></span>
            </div>
            <div class="form-group">
                <h5>Amount: </h5>
                <input asp-for="Amount" type="text" class="form-control" onkeypress="return isNumber(event)"  onkeyup = "javascript:this.value=Comma(this.value);" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group" style="margin-top: 8px" >
                <input type="submit" value="Save" class="btn btn-success btn-sm" />  <a class="btn btn-default btn-sm" data-dismiss="modal">Back to List</a>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>

     $('#dv_type').on('change', function () {
            var type = $(this).val();
            $.ajax({
                url: '@Url.Action("GetLatestDvType","Dv")',
                data: {
                    type: type
                },
                method: 'GET',
                async: true,
                success: function (output) {
                    $('#dv_no').val(output);
                }
            })
     });

    function Comma(Num) { //function to add commas to textboxes
        Num += '';
        Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');
        Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');
        x = Num.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1))
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        return x1 + x2;
    }

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

</script>