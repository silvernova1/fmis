@model fmis.Models.John.FundSource
@using System.Text.Json;
@using System.Globalization;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<input type="hidden" class="uacs_from" value="@JsonSerializer.Serialize(Model.FundSourceAmounts)">
<input type="hidden" class="fundsrealignment" value="@JsonSerializer.Serialize(Model.FundsRealignment)">
<input type="hidden" class="uacs" value="@JsonSerializer.Serialize(Model.Uacs)">
<input type="hidden" id="fundsource_id" value="@Model.FundSourceId" />

<h3 class="grey lighter smaller">
    @Model.BudgetAllotment.Allotment_title
    <small>
        <i class="ace-icon fa fa-angle-double-right"></i>
        @Model.FundSourceTitle
    </small>
</h3>
<hr />
<a class="btn btn-primary btn-sm " asp-controller="FundSource" asp-action="Index" asp-route-id="@Model.FundSourceId" asp-route-BudgetAllotmentId="@Model.BudgetAllotmentId"><span class="glyphicon glyphicon-arrow-left"></span> Back to Fund Source</a>
<br />
<br />
<div class="row  pull-left">
    <div class="space-5"></div>

    <div class="col-xs-12 infobox-container">
        <div class="infobox infobox-green">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-money"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                    @Model.Remaining_balance.ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-success arrowed-in arrowed-in-right"> Beginning Balance </span>
                </div>
            </div>
        </div>
        <div class="infobox infobox-orange2">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-bar-chart-o"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                    @Model.realignment_amount.ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-warning arrowed-in arrowed-in-right"> Realignment Amount </span>
                </div>
            </div>
        </div>
        <div class="infobox infobox-red">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-calculator"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color: grey;">
                    @Model.Remaining_balance.ToString("C", new CultureInfo("en-PH"))
                </span>
                <div class="infobox-content">
                    <span class="label label-danger arrowed-in arrowed-in-right"> Remaining Balance </span>
                </div>
            </div>
        </div>
    </div>
</div>
<br>
<br>
<br>
<br>
<br />
<div id="example" class="hot"></div>
<br />
<script>
    var fundsource_id = $("#fundsource_id").val();

    var CHECK_AFTER_ROW = false;
    var CHECK_FIRST_ROW = false;

    let guid = () => {
        let s4 = () => {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    }

    function ajaxServerFundsRealignment(ajax_data, url) {
        $.ajax({
            type: 'POST',
            url: url,
            headers: { "RequestVerificationToken": '@GetAntiXsrfRequestToken()' },
            data: { data: ajax_data },
            success: function (output) {
                $('#loading_modal').modal('hide');
            }
        });
    }

    //FUNDS REALIGNMENT FROM
    var uacs = $.parseJSON($(".uacs_from").val());
    var uacs_data_dropdown = [];
    var uacs_data_array = [];
    var get_account_title = [];
    var uacs_counter = 0;
    $.each(uacs, function () {
        uacs_data_dropdown[uacs_counter] = this.Uacs.Account_title;
        var json_data = new Object();
        json_data.UacsId = this.Uacs.UacsId;
        uacs_data_array[this.Uacs.Account_title] = json_data;
        get_account_title[this.Uacs.UacsId] = this.Uacs.Account_title;
        uacs_counter++;
    });

    //FUNDS REALIGNEMNT TO
    var uacs = $.parseJSON($(".uacs").val());
    var uacs_data_dropdown_2 = [];
    var uacs_data_array_2 = [];
    var get_account_title_2 = [];
    var uacs_counter_2 = 0;
    $.each(uacs, function () {
        uacs_data_dropdown_2[uacs_counter_2] = this.Account_title;
        var json_data_2 = new Object();
        json_data_2.UacsId = this.UacsId;
        uacs_data_array_2[this.Account_title] = json_data_2;
        get_account_title_2[this.UacsId] = this.Account_title;
        uacs_counter_2++;
    });

    var fundsource_amount = 0;
    var fundsrealignment = $.parseJSON($(".fundsrealignment").val());
    const data = [];
    var counter = 0;
    $.each(fundsrealignment, function () {
        data[counter] = [
            get_account_title[this.Realignment_from],
            get_account_title_2[this.Realignment_to] ,
            this.Realignment_amount,
            this.FundSourceId,
            this.token]
        counter++;
        fundsource_amount += this.Realignment_amount;
    })
    $(".fundsource_amount").html(fundsource_amount);

    const searchField = document.querySelector('#search_field2');
    const button = document.querySelector('#export-file');
    const container = document.getElementById('example');
    const hot = new Handsontable(container, {
        data: data,
        colWidths: [350, 350, 350],
        rowHeaders: true,
        colHeaders: ['REALIGNMENT FROM', 'REALIGNMENT TO', 'AMOUNT', 'ID', 'TOKEN'],
        columns: [
            {
                //REALIGNMENT FROM
                type: 'dropdown',
                source: uacs_data_dropdown
            },
            {
                //REALIGNMENT TO
                type: 'dropdown',
                source: uacs_data_dropdown_2
            },
            {
                type: 'text'
            },
            {
                //HIDDEN ID
            },
            {
                //HIDDEN TOKEN
            },
        ],
        undo: true,
        search: {
            searchResultClass: 'search-result-custom'
        },
        contextMenu: ['row_above', 'row_below', 'remove_row'],
        beforeRemoveRow: function (index, column) {
            var selection = this.getSelected();
            var holder_data = this.getData();
            var single_token = holder_data[selection[0][0]][4];
            var first_column = selection[0][0];
            var last_column = selection[0][2];
			var many_token = [];
            for (var j = first_column; j <= last_column; j++) {
                many_token.push({
                    many_token: holder_data[j][4]
                })
            }

			var ajax_data = {
				"single_token": single_token,
				"many_token": many_token
			};

			console.log(ajax_data);
			ajaxServerFundsRealignment(ajax_data,'@Url.Action("DeleteFundsRealignment", "FundsRealignment")');
		},
        afterUndo: function (index, column) {

        },
        afterCreateRow: function (row, column) {
            CHECK_FIRST_ROW = true;
            console.log(row);
            console.log(column);
            hot.setDataAtCell(row, 4, guid());
        },
        afterChange: function (changes, source) {
            if (!changes || source === 'loadData' || CHECK_AFTER_ROW) {
                CHECK_AFTER_ROW = false;
                return;
            }

            changes.forEach(([row, col, oldValue, newValue]) => {
                if (col == 2) {
                    console.log("saving the amount");
                    var ajax_data = [];
                    ajax_data.push(
                        {
                            Realignment_from: uacs_data_array[hot.getDataAtCell(row, 0)].UacsId,
                            Realignment_to: uacs_data_array_2[hot.getDataAtCell(row, 1)].UacsId,
                            Realignment_amount: hot.getDataAtCell(row, 2),
                            FundSourceId: fundsource_id,
                            token: hot.getDataAtCell(row, 3)
                        }
                    );
                    console.log(ajax_data);
                    ajaxServerFundsRealignment(ajax_data, '@Url.Action("SaveFundsRealignment", "FundsRealignment")');
                    CHECK_FIRST_ROW = true;
                }
            });

            if (CHECK_FIRST_ROW) {
                CHECK_FIRST_ROW = false; //TRAP THE DOUBLE LOAD IN FIRST ROW
            } else {
                console.log("else");
                var ajax_data = [];
                $.each(hot.getSourceData(), function () {
                    ajax_data.push({
                        Realignment_from: this[0] ? uacs_data_array[this[0]].UacsId : "",
                        Realignment_to: this[1] ? uacs_data_array_2[this[1]].UacsId : "",
                        Realignment_amount: this[2],
                        FundSourceId: fundsource_id,
                        token: this[4]
                    });
                });
                console.log(ajax_data);

                ajaxServerFundsRealignment(ajax_data, '@Url.Action("SaveFundsRealignment", "FundsRealignment")');
            }
		},
        height: '250px',
        hiddenColumns: {
            columns: [3,4],
            indicators: true
        },
        licenseKey: 'non-commercial-and-evaluation', // for non-commercial use only
    });
    var tableData = JSON.stringify(hot.getSourceData());
</script>

