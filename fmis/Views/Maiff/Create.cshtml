@model fmis.Models.Maiff.MaiffDv

<style>


    p {
        margin: 0;
        padding: 0;
    }

    .ft10 {
        font-size: 16px;
        font-family: Helvetica;
        color: #000000;
    }

    .ft11 {
        font-size: 11px;
        font-family: Times;
        color: #000000;
    }

    .ft12 {
        font-size: 11px;
        font-family: Times;
        color: #000000;
    }

    .ft13 {
        font-size: 10px;
        font-family: Times;
        color: #000000;
    }

    .ft14 {
        font-size: 16px;
        font-family: Times;
        color: #000000;
    }

    .ft15 {
        font-size: 11px;
        font-family: Helvetica;
        color: #000000;
    }

    .ft16 {
        font-size: 10px;
        font-family: Helvetica;
        color: #000000;
    }

    .ft17 {
        font-size: 11px;
        font-family: Helvetica;
        color: #000000;
    }

    .ft18 {
        font-size: 11px;
        line-height: 13px;
        font-family: Helvetica;
        color: #000000;
    }
</style>

<form asp-action="SaveMaiffDv" asp-controller="Maiff" method="post">     
        <div id="page1-div" style="position:relative;width:892px;height:1263px;">

            <img src="~/assets/images/target004.png" width="892" height="1263" class="img-responsive" />
            <p style="position:absolute;top:68px;left:54px;white-space:nowrap" class="ft10">&#160;</p>
            <p style="position:absolute;top:88px;left:295px;white-space:nowrap" class="ft11">Republic of Philippines</p>
            <p style="position:absolute;top:108px;left:300px;white-space:nowrap" class="ft11">Department of Health</p>
            <p style="position:absolute;top:127px;left:164px;white-space:nowrap" class="ft12"><b>CENTRAL VISAYAS CENTER FOR HEALTH DEVELOPMENT</b></p>
            <p style="position:absolute;top:146px;left:214px;white-space:nowrap" class="ft13">Osmeña Boulevard, Sambag II, Cebu City, 6000 Philippines</p>
            <p style="position:absolute;top:170px;left:176px;white-space:nowrap" class="ft13">Regional Director's Office Tel. No. (032) 253-6335 Fax No. (032) 254-0109</p>
            <p style="position:absolute;top:190px;left:239px;white-space:nowrap" class="ft14"><b>DISBURSEMENT VOUCHER</b></p>
            <p style="position:absolute;top:98px;left:583px;white-space:nowrap" class="ft15">Fund Cluster :</p>
            <p style="position:absolute;top:95px;left:696px;white-space:nowrap" class="ft15"></p>
            <p style="position:absolute;top:109px;left:738px;white-space:nowrap" class="ft15"></p>
            <p style="position:absolute;top:142px;left:589px;white-space:nowrap" class="ft15">Date :</p>
            <input type="date" asp-for="Date"  id="dateField" style="position:absolute;top:135px;left:650px;white-space:nowrap; width: 150px; height: 28px; font-size:8pt" class="ft15">
            <p style="position:absolute;top:173px;left:589px;white-space:nowrap" class="ft15">DV No :</p>
            <p style="position:absolute;top:173px;left:728px;white-space:nowrap" class="ft15"></p>
            <p style="position:absolute;top:230px;left:57px;white-space:nowrap" class="ft18">Mode Of<br />Payment</p>
            <p style="position:absolute;top:237px;left:178px;white-space:nowrap" class="ft15">MDS Check</p>
            <p style="position:absolute;top:230px;left:311px;white-space:nowrap" class="ft18">Commercial<br />Check</p>
            <p style="position:absolute;top:237px;left:443px;white-space:nowrap" class="ft15">ADA</p>
            <p style="position:absolute;top:237px;left:566px;white-space:nowrap" class="ft15">Others (Please specify) ____________</p>
            <p style="position:absolute;top:272px;left:57px;white-space:nowrap" class="ft15">Payee</p>
            <select id="facilityDropdown" asp-for="Payee" style="position:absolute;top:261px;left:140px;white-space:nowrap; width:260px; height: 28px; font-size: 9pt" class="ft15">
                <option value=""> - Select Facility - </option>
            </select>
            <p style="position:absolute;top:269px;left:434px;white-space:nowrap" class="ft18">Tin/Employee No.:<br /></p>
            <p style="position:absolute;top:272px;left:638px;white-space:nowrap" class="ft15">ORS/BURS No.:</p>
            <p style="position:absolute;top:305px;left:57px;white-space:nowrap" class="ft15">Address</p>
        @* <p style="position:absolute;top:305px;left:150px;white-space:nowrap; color:red; font-weight:bold" id="facilityAddress" name="facilityAddress" class="ft15"></p> *@
        <p style="position:absolute;top:305px;left:150px;white-space:nowrap; color:red; font-weight:bold" id="facilityAddress" name="facilityAddress" class="ft15"></p>
        <input type="hidden" id="facilityAddressHidden" name="facilityAddress" value="" />

            <p style="position:absolute;top:343px;left:246px;white-space:nowrap" class="ft15">Particulars</p>
            <p style="position:absolute;top:338px;left:517px;white-space:nowrap" class="ft15">Responsibility</p>
            <p style="position:absolute;top:351px;left:538px;white-space:nowrap" class="ft15">Center</p>
            <p style="position:absolute;top:347px;left:640px;white-space:nowrap" class="ft15">MFO/PAP</p>
            <p style="position:absolute;top:347px;left:759px;white-space:nowrap" class="ft15">Amount</p>
            <p style="position:absolute;top:375px;left:69px;white-space:nowrap" class="ft16">
                For reimbursement of medical services rendered to patients under the Medical Assistance for <br />
            </p>
            <p style="position:absolute;top:395px;left:69px;white-space:nowrap" class="ft16">
                Indigent Patient Program for
                <span id="hospitalAddress" style="color:red;"></span>
            </p>
            <p style="position:absolute;top:415px;left:69px;white-space:nowrap" class="ft16">
                per billing statement dated
                <input type="month" id="billingMonth1" asp-for="MonthYearFrom" style="width: 110px; height: 28px; font-size: 8pt;" class="ft15">
                <!-- Second Month Picker -->
            <input type="month" id="billingMonth2" asp-for="MonthYearTo" style="width: 110px; height: 28px; font-size: 8pt;" class="ft15">
                    in the amount of:
            </p>

            <select id="saa1" asp-for="SaaNumber" name="selectedSaa1" style="position:absolute;top:470px;left:100px;white-space:nowrap; width:150px; height: 20px" class="ft15">
                    <option value="SAA">  </option>
            </select>
            <input type="text" asp-for="Amount1" name="amount1" id="inputValue1" style="position:absolute;top:470px;left:270px;white-space:nowrap; width:150px; height: 20px; font-size: 8pt" class="ft15">
                <br />
                <br />
                <span id="showSAAButton" class="fa fa-plus" style="position:absolute;top:475px;left:75px; width:20px; height: 20px; cursor:pointer" onclick="toggleSAADropdowns()"></span>
            <select id="saa2" asp-for="SaaNumber" name="selectedSaa2"  style="position:absolute;top:490px;left:100px;white-space:nowrap; display:none; width:150px; height: 20px" class="ft15">
                  <option value="SAA">  </option> 
            </select>
           <input type="text" asp-for="Amount2" name="amount2" id="inputValue2" style="position:absolute;top:490px;left:270px;white-space:nowrap; width:150px; height: 20px; font-size: 8pt; display:none;" class="ft15">

            <select id="saa3" asp-for="SaaNumber" name="selectedSaa3" style="position:absolute;top:510px;left:100px;white-space:nowrap; display:none; width:150px; height: 20px" class="ft15">
               <option value="SAA">  </option>      
            </select>
           <input type="text" asp-for="Amount3" name="amount3" id="inputValue3" style="position:absolute;top:510px;left:270px;white-space:nowrap; width:150px; height: 20px; font-size: 8pt; display:none;" class="ft15">

        <select id="deduction1" name="deduction1" style="position:absolute;top:550px;left:100px;white-space:nowrap; width:150px; height: 20px" class="ft15">
                
            </select>
            <input type="text" id="inputDeduction1" asp-for="DeductionAmount1" style="position:absolute;top:550px;left:270px;white-space:nowrap; width:150px; height: 20px; font-size: 8pt" class="ft15">

        <select id="deduction2" name="deduction2" style="position:absolute;top:570px;left:100px;white-space:nowrap; width:150px; height: 20px" class="ft15">
            </select>
        <input type="text" id="inputDeduction2" asp-for="DeductionAmount2" style="position:absolute;top:570px;left:270px;white-space:nowrap; width:150px; height: 20px; font-size: 8pt" class="ft15">

            <p style="position:absolute;top:598px;left:69px;white-space:nowrap; font-weight:bold;" class="ft16">  &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; Amount Due</p>
            <p style="position:absolute;top:389px;left:746px;white-space:nowrap" class="ft15"></p>
            <p style="position:absolute;top:470px;left:750px;white-space:nowrap" class="ft15 total"></p>
            <p style="position:absolute;top:551px;left:755px;white-space:nowrap" class="ft15 totalDeduction"></p>
            <p style="position:absolute;top:581px;left:730px;white-space:nowrap" class="ft15">_________________</p>
            <p style="position:absolute;top:598px;left:755px;white-space:nowrap; font-weight:bold" class="ft15 overallTotal"></p>
            <p style="position:absolute;top:615px;left:57px;white-space:nowrap" class="ft17"><b>A. Certified: Expenses/Cash Advance necessary, lawful and incurred under my direct supervision.</b></p>
            <p style="position:absolute;top:652px;left:57px;white-space:nowrap; font-size:9pt" class="ft17"><b>&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;  SOPHIA M. MANCAO, MD, DPSP, RN-MAN </b></p>
            <p style="position:absolute;top:666px;left:60px;white-space:nowrap; font-size: 8pt" class="ft17">&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; Director III</p>
            <p style="position:absolute;top:687px;left:57px;white-space:nowrap" class="ft17"><b>B. Accounting Entry:</b></p>
            <p style="position:absolute;top:709px;left:211px;white-space:nowrap" class="ft15">Account Title</p>
            <p style="position:absolute;top:709px;left:478px;white-space:nowrap" class="ft15">Uacs Code</p>
            <p style="position:absolute;top:709px;left:627px;white-space:nowrap" class="ft15">Debit</p>
            <p style="position:absolute;top:709px;left:755px;white-space:nowrap" class="ft15">Credit</p>
            <p style="position:absolute;top:819px;left:57px;white-space:nowrap" class="ft17"><b>C. Certified:</b></p>
            <p style="position:absolute;top:819px;left:449px;white-space:nowrap" class="ft17"><b>D. Approved for Payment:</b></p>
            <p style="position:absolute;top:850px;left:135px;white-space:nowrap" class="ft15">Cash available</p>
            <p style="position:absolute;top:881px;left:135px;white-space:nowrap" class="ft18">Subject to Authority to Debit Account (when<br />applicable)</p>
            <p style="position:absolute;top:916px;left:135px;white-space:nowrap" class="ft18">Supporting documents complete and amount<br />claimed proper</p>
            <p style="position:absolute;top:955px;left:64px;white-space:nowrap" class="ft15">Signature</p>
            <p style="position:absolute;top:955px;left:457px;white-space:nowrap" class="ft15">Signature</p>
            <p style="position:absolute;top:979px;left:74px;white-space:nowrap" class="ft16">Printed</p>
            <p style="position:absolute;top:991px;left:77px;white-space:nowrap" class="ft16">Name</p>
            <p style="position:absolute;top:985px;left:210px;white-space:nowrap; font-size:8pt; font-weight:bold" class="ft15">ANGIELYN T. ADLAON, CPA, MBA</p>
            <p style="position:absolute;top:979px;left:466px;white-space:nowrap" class="ft16">Printed</p>
            <p style="position:absolute;top:991px;left:469px;white-space:nowrap" class="ft16">Name</p>
            <p style="position:absolute;top:985px;left:563px;white-space:nowrap; font-size:8pt; font-weight:bold" class="ft16">JAIME S. BERNADAS, MD, MGM, CESO III</p>
            <p style="position:absolute;top:1025px;left:69px;white-space:nowrap" class="ft15">Position</p>
            <p style="position:absolute;top:1010px;left:235px;white-space:nowrap; font-size: 8pt" class="ft16">Head, Accounting Section</p>
            <p style="position:absolute;top:1028px;left:165px;white-space:nowrap; font-size: 8pt" class="ft16">Head, Accounting Unit/ Authorized Representative</p>
            <p style="position:absolute;top:1025px;left:461px;white-space:nowrap" class="ft15">Position</p>
            <p style="position:absolute;top:1010px;left:644px;white-space:nowrap; font-size: 8pt" class="ft16">DIRECTOR IV</p>
            <p style="position:absolute;top:1028px;left:573px;white-space:nowrap; font-size: 8pt" class="ft16">Agency Head/Authorized Representative</p>
            <p style="position:absolute;top:1061px;left:79px;white-space:nowrap" class="ft15">Date</p>
            <p style="position:absolute;top:1061px;left:471px;white-space:nowrap" class="ft15">Date</p>
            <p style="position:absolute;top:1085px;left:57px;white-space:nowrap" class="ft17"><b>E. Receipt of Payment</b></p>
            <p style="position:absolute;top:1111px;left:62px;white-space:nowrap" class="ft16">Check/ ADA</p>
            <p style="position:absolute;top:1123px;left:84px;white-space:nowrap" class="ft16">No.:</p>
            <p style="position:absolute;top:1108px;left:355px;white-space:nowrap" class="ft15">&#160;Date:</p>
            <p style="position:absolute;top:1108px;left:490px;white-space:nowrap" class="ft15">Bank Name &amp; Account Number:</p>
            <p style="position:absolute;top:1108px;left:706px;white-space:nowrap" class="ft15">JEV No.</p>
            <p style="position:absolute;top:1153px;left:64px;white-space:nowrap" class="ft15">Signature:</p>
            <p style="position:absolute;top:1145px;left:355px;white-space:nowrap" class="ft15">&#160;Date:</p>
            <p style="position:absolute;top:1145px;left:490px;white-space:nowrap" class="ft15">Printed Name:</p>
            <p style="position:absolute;top:1145px;left:706px;white-space:nowrap" class="ft15">Date</p>
            <p style="position:absolute;top:1180px;left:57px;white-space:nowrap" class="ft15">Official Receipt No. &amp; Date/Other Documents</p>
        </div>

        <div class="modal-footer">
            <button type="submit" onclick="showNotification()" class="btn btn-xs btn-primary">Save <span class="fa fa-check-square-o"></span> </button>
            <a data-dismiss="modal" class="btn btn-xs btn-danger">Cancel</a>
        </div>

    </form>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector("form").addEventListener("submit", function () {
            var pTagText = document.getElementById("facilityAddress").textContent;
            document.getElementById("facilityAddressHidden").value = pTagText;
        });
    });

    function fetchDataForDropdown(dropdownId, facilityDropdownId, populateFacility) {
        $.get('http://192.168.110.246/maif/fundsource/saa/get', function (result) {
            populateDropdown(result, dropdownId, facilityDropdownId, populateFacility);
        });
    }

    // Fetch and populate VAT dropdown
    fetchDataForDeductionDropdown('deduction1', true);

    // Fetch and populate EWT dropdown
    fetchDataForDeductionDropdown('deduction2', false);

    function fetchDataForDeductionDropdown(dropdownId, isVat) {
        $.get('http://192.168.110.246/maif/facility/vatEwt', function (result) {
            populateDeductionDropdown(result, dropdownId, isVat);
        });
    }

    function populateDeductionDropdown(data, dropdownId, isVat) {
        var dropdown = $('#' + dropdownId);

        // Clear existing options
        dropdown.empty();

        // Set the default option text
        var defaultOptionText = isVat ? '- Select Vat Deduction -' : '- Select Ewt Deduction -';

        // Add default option
        dropdown.append($('<option>').val('').text(defaultOptionText));

        // Use a Set to keep track of unique values
        var uniqueValues = new Set();

        // Loop through the data and add options based on VAT or EWT
        for (var i = 0; i < data.length; i++) {
            var value = isVat ? Math.floor(data[i].vat) : Math.floor(data[i].Ewt);

            // Check if the value is unique before adding it to the dropdown
            if (!uniqueValues.has(value)) {
                var optionText = '%' + value + (isVat ? ' VAT' : ' EWT');
                var optionValue = data[i].id;

                dropdown.append($('<option>').val(optionValue).text(optionText));

                // Add the value to the Set to mark it as seen
                uniqueValues.add(value);
            }
        }
    }




    function populateDropdown(data, dropdownId, facilityDropdownId, populateFacility) {
        const dropdown = document.getElementById(dropdownId);
        const facilityDropdown = document.getElementById(facilityDropdownId);
        const facilityAddressElement = document.getElementById('facilityAddress');
        const hospitalAddress = document.getElementById('hospitalAddress');
 

        if (!dropdown || !facilityDropdown || !facilityAddressElement || !hospitalAddress) {
            console.error('Dropdown elements not found.');
            return;
        }

        dropdown.innerHTML = '';
        facilityDropdown.innerHTML = '';
        hospitalAddress.innerHTML = '';

        const defaultOption = document.createElement('option');
        defaultOption.value = 'SAA';
        defaultOption.text = ' - Select SAA - ';
        dropdown.appendChild(defaultOption);

        if (populateFacility) {
            const facilityDefaultOption = document.createElement('option');
            facilityDefaultOption.value = '';
            facilityDefaultOption.text = ' - Select Facility - ';
            facilityDropdown.appendChild(facilityDefaultOption);
        }

        const saaToFacilityMap = {}; // Map to store SAA to facility names

        data.forEach(item => {
            const saa = item.saa;
            const proponents = item.proponents;

            // Check if the item has proponents
            if (proponents && proponents.length > 0) {
                proponents.forEach(proponent => {
                    const facilityName = proponent.proponent_info[0].facility.name;
                    const facilityAddress = proponents[0].proponent_info[0].facility.address;

                    // Add facilityName to the SAA's list or create a new list
                    if (saa in saaToFacilityMap) {
                        saaToFacilityMap[saa].push(facilityName);
                    } else {
                        saaToFacilityMap[saa] = [facilityName];
                    }
                });
            }
        });

        // Populate SAA dropdown with unique SAA values
        Object.keys(saaToFacilityMap).forEach(saa => {
            const option = document.createElement('option');
            option.value = saa;
            option.text = saa;
            dropdown.appendChild(option);
        });

        if (populateFacility) {
            // Populate facility dropdown based on the initially selected SAA
            populateFacilityDropdown(dropdown.value, facilityDropdown, saaToFacilityMap);

            // Add an event listener to the SAA dropdown to dynamically update the facility dropdown and facility address
            dropdown.addEventListener('change', function () {
                const selectedSAA = dropdown.value;
                populateFacilityDropdown(selectedSAA, facilityDropdown, saaToFacilityMap);

                // Update the facility address when the SAA changes
                const selectedFacilityName = facilityDropdown.value;
                if (selectedSAA !== 'SAA' && selectedSAA !== '- Select SAA -') {
                    const facility = saaToFacilityMap[selectedSAA].find(facilityName => facilityName === selectedFacilityName);
                    if (facility) {
                        const facilityAddress = data.find(item => item.saa === selectedSAA)
                            .proponents.find(proponent => proponent.proponent_info[0].facility.name === facility).proponent_info[0].facility.address;
                        facilityAddressElement.textContent = facilityAddress;

                        // Set the facilityName to the haha element
                        hospitalAddress.textContent = facility; // Set the selected facilityName to the haha element
                    } else {
                        facilityAddressElement.textContent = ''; // Clear the address if no facility is selected
                        hospitalAddress.textContent = '';
                    }
                } else {
                    facilityAddressElement.textContent = ''; // Clear the address when SAA is not selected
                    hospitalAddress.textContent = '';
                }
            });

            // Add an event listener to the facility dropdown to display the facility address
            facilityDropdown.addEventListener('change', function () {
                const selectedSAA = dropdown.value;
                const selectedFacilityName = facilityDropdown.value;

                // Find the facility address based on the selected facilityName and update the address element
                if (selectedSAA !== 'SAA' && selectedSAA !== '- Select SAA -' && saaToFacilityMap[selectedSAA]) {
                    const facility = saaToFacilityMap[selectedSAA].find(facilityName => facilityName === selectedFacilityName);
                    if (facility) {
                        const facilityAddress = data.find(item => item.saa === selectedSAA)
                            .proponents.find(proponent => proponent.proponent_info[0].facility.name === facility).proponent_info[0].facility.address;
                        facilityAddressElement.textContent = facilityAddress;

                        // Set the facilityName to the haha element
                        hospitalAddress.textContent = facility; // Set the selected facilityName to the haha element
                    } else {
                        facilityAddressElement.textContent = ''; // Clear the address if no facility is selected
                        hospitalAddress.textContent = '';
                    }
                } else {
                    facilityAddressElement.textContent = ''; // Clear the address when SAA is not selected
                    hospitalAddress.textContent = '';
                }
            });
        }
    }

    function populateFacilityDropdown(selectedSAA, facilityDropdown, saaToFacilityMap) {
        facilityDropdown.innerHTML = ''; // Clear previous options

        // Add the default "Select Facility" option
        const facilityDefaultOption = document.createElement('option');
        facilityDefaultOption.value = '';
        facilityDefaultOption.text = ' - Select Facility - ';
        facilityDropdown.appendChild(facilityDefaultOption);

        if (selectedSAA !== 'SAA' && saaToFacilityMap[selectedSAA]) {
            // Display all facility names for the selected SAA
            saaToFacilityMap[selectedSAA].forEach(facilityName => {
                const facilityOption = document.createElement('option');
                facilityOption.value = facilityName;
                facilityOption.text = facilityName;
                facilityDropdown.appendChild(facilityOption);
            });
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        fetchDataForDropdown('saa1', 'facilityDropdown', true); // 'facilityDropdown' will be populated
        fetchDataForDropdown('saa2', 'facilityDropdown', false); // 'facilityDropdown' will not be populated
        fetchDataForDropdown('saa3', 'facilityDropdown', false); // 'facilityDropdown' will not be populated

        const facilityAddressElement = document.getElementById('facilityAddress');
        const facilityAddressInput = document.getElementById('facilityAddressInput');
    });


    // Get the input elements and the result paragraph
    var input1 = document.getElementById("inputValue1");
    var input2 = document.getElementById("inputValue2");
    var input3 = document.getElementById("inputValue3");
    var resultParagraph = document.querySelector("p.total");

    // Get the input elements for the first deduction set and the result paragraph
    var deductionInput1 = document.getElementById("inputDeduction1");
    var deductionInput2 = document.getElementById("inputDeduction2");
    var deductionResultParagraph = document.querySelector("p.totalDeduction");

    // Function to update the total and hide the paragraph if no data
    function updateTotal() {
        // Remove non-numeric and non-dot characters, and format with commas
        input1.value = input1.value.replace(/[^0-9.]/g, '').replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
        input2.value = input2.value.replace(/[^0-9.]/g, '').replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
        input3.value = input3.value.replace(/[^0-9.]/g, '').replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');

        var value1 = parseFloat(input1.value.replace(/,/g, '')) || 0;
        var value2 = parseFloat(input2.value.replace(/,/g, '')) || 0;
        var value3 = parseFloat(input3.value.replace(/,/g, '')) || 0;

        var total = value1 + value2 + value3;

        // Format the total with comma and dot separators
        var formattedTotal = total.toLocaleString(undefined, {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });


        resultParagraph.textContent = formattedTotal;


        // Hide the paragraph if no data is entered in all input fields
        if (value1 === 0 && value2 === 0 && value3 === 0) {
            resultParagraph.style.display = "none";
        } else {
            resultParagraph.style.display = "block";
        }


    }

    function updateDeductionTotal() {
        deductionInput1.value = deductionInput1.value.replace(/[^0-9.]/g, '').replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
        deductionInput2.value = deductionInput2.value.replace(/[^0-9.]/g, '').replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');

        var deduction1 = parseFloat(deductionInput1.value.replace(/,/g, '')) || 0;
        var deduction2 = parseFloat(deductionInput2.value.replace(/,/g, '')) || 0;

        var totalDeduction = deduction1 + deduction2;

        var formattedTotalDeduction = totalDeduction.toLocaleString(undefined, {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });

        deductionResultParagraph.textContent = formattedTotalDeduction;

        if (deduction1 === 0 && deduction2 === 0) {
            deductionResultParagraph.style.display = "none";
        } else {
            deductionResultParagraph.style.display = "block";
        }

        // Subtract the totalDeduction from resultValue
        var resultValue = parseFloat(resultParagraph.textContent.replace(/,/g, '')) || 0;
        var finalValue = resultValue - totalDeduction;

        // Format the final value with comma and dot separators
        var formattedFinalValue = finalValue.toLocaleString(undefined, {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });

        // Display the subtracted amount in the "ft15 overallTotal" paragraph
        var overallTotalParagraph = document.querySelector("p.overallTotal");
        overallTotalParagraph.textContent = formattedFinalValue;
    }



    // Add event listeners to each input element to update the total
    input1.addEventListener("input", updateTotal);
    input2.addEventListener("input", updateTotal);
    input3.addEventListener("input", updateTotal);

    // Add event listeners to each deduction input element for the first set
    deductionInput1.addEventListener("input", updateDeductionTotal);
    deductionInput2.addEventListener("input", updateDeductionTotal);

    // Initially, hide the paragraph
    resultParagraph.style.display = "none";
    deductionResultParagraph.style.display = "none";

    function setCurrentDate() {
        const dateField = document.getElementById("dateField");
        const currentDate = new Date();
        const year = currentDate.getFullYear();
        let month = (currentDate.getMonth() + 1).toString();
        if (month.length === 1) {
            month = "0" + month; // Add leading zero if needed
        }
        const day = currentDate.getDate();

        dateField.value = `${year}-${month}-${day}`;
    }

    // Function to clear the values of the billing statement inputs
    function clearBillingStatementInputs() {
        const billingMonth1 = document.getElementById("billingMonth1");
        const billingMonth2 = document.getElementById("billingMonth2");

        billingMonth1.value = "";
        billingMonth2.value = "";
    }

    // Call the functions when the page loads
    setCurrentDate();
    clearBillingStatementInputs();


    var saa2Visible = false; // Track the visibility of saa2 and inputValue2
    var saa3Visible = false; // Track the visibility of saa3 and inputValue3

    function toggleSAADropdowns() {
        var saa2 = document.getElementById("saa2");
        var saa3 = document.getElementById("saa3");
        var inputValue2 = document.getElementById("inputValue2");
        var inputValue3 = document.getElementById("inputValue3");

        if (!saa2Visible) {
            saa2.style.display = "block";
            inputValue2.style.display = "block";
            saa2Visible = true;
        } else if (!saa3Visible) {
            saa3.style.display = "block";
            inputValue3.style.display = "block";
            saa3Visible = true;
        } else {
            saa2.style.display = "none";
            inputValue2.style.display = "none";
            saa3.style.display = "none";
            inputValue3.style.display = "none";
            saa2Visible = false;
            saa3Visible = false;
        }
    }



</script>