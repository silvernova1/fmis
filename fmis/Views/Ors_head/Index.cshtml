model IEnumerable<fmis.Models.Ors_head>

    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" />


    <style>
        .search-result-custom {
            color: #ff0000;
            font-weight: 900;
        }
    </style>

    <input type="hidden" class="ors_head" value="@ViewBag.temp">
    <input id="search_field2" type="search" placeholder="Search" />
    <br />
    <br />
    <div id="example" class="hot"></div>
    <br />
    <div class="controls">
        <button id="export-file">Download CSV</button>
    </div>



    <script>

    document.onkeydown = function (e) {
        if (e.ctrlKey && e.keyCode === 83) {
            $('#loading_modal').modal('show');
            console.log(hot.getData());
            return false;
        }
        $.ajax('Ors_head/Create', 'GET', JSON.stringify({ data: hot.getData() }), res => {
            const response = JSON.parse(res.response);

            if (response.result === 'ok') {
                exampleConsole.innerText = 'Data saved';
            } else {
                exampleConsole.innerText = 'Save error';
            }
        });
    };

    var ors_head = $.parseJSON($(".ors_head").val());

    const data = [];
    var counter = 0;
    $.each(ors_head, function () {
        data[counter] = [this.Id, this.Head_name, this.Position, this.Created_at, this.Updated_at]
        counter++;
    })
    const searchField = document.querySelector('#search_field2');
    const button = document.querySelector('#export-file');
    const container = document.getElementById('example');
    const hot = new Handsontable(container, {
        data: data,
        width: '100%',
        colWidths: 100,
        rowHeaders: true,
        colHeaders: true,
        search: {
            searchResultClass: 'search-result-custom'
        },
        contextMenu: ['row_above', 'row_below', 'remove_row', ['Add Obligated Amount']],
        height: 'auto',
        licenseKey: 'non-commercial-and-evaluation' // for non-commercial use only
    });



    Handsontable.dom.addEvent(searchField, 'keyup', function (event) {
        const search = hot.getPlugin('search');
        const queryResult = search.query(this.value);

        console.log(queryResult);
        hot.render();
    });

    const exportPlugin = hot.getPlugin('exportFile');

    button.addEventListener('click', () => {
        exportPlugin.downloadFile('csv', {
            bom: false,
            columnDelimiter: ',',
            columnHeaders: false,
            exportHiddenColumns: true,
            exportHiddenRows: true,
            fileExtension: 'csv',
            filename: 'Handsontable-CSV-file_[YYYY]-[MM]-[DD]',
            mimeType: 'text/csv',
            rowDelimiter: '\r\n',
            rowHeaders: true
        });
    });

    hot.addHook('afterChange', function (changes, src) {
        [
            [row, col, oldVal, newVal]
        ] = changes;
        if (hot.propToCol(col) === 3 && newVal.slice(0, 1) !== 'Y') {
            console.log(newVal);
            hot.setDataAtCell(row, hot.propToCol(col), 'Y' + newVal.slice(1, newVal.length))
        }
    })

    hot.updateSettings({
        colHeaders: ['Id','Head_name', 'Position', 'Created_at', 'Updated_at'],
        cell: [
            {
                row: 0,
                col: 0,
                className: 'custom-cell',
            },
        ],
        columns: [
            {
                type: 'date',
                dateFormat: 'MM/DD/YYYY',
            },
            {
                // 2nd cell is simple text, no special options here
            },
            {

            },
            {

            },
            {

            },
            {

            },
            {

            },

            {

            },

            {
                type: 'dropdown',
                source: ['Rusel', 'John', 'Carlo', 'Arnel', 'Amalio']
            },

            {
            },

            {
            },

            {
                type: 'date',
                dateFormat: 'DD/MM/YYYY',
            },

            {
                type: 'time',
                timeFormat: 'h:mm:ss a',
                correctFormat: true
            },

            {
                type: 'date',
                dateFormat: 'DD/MM/YYYY',
            },

            {
                type: 'time',
                timeFormat: 'h:mm:ss a',
                correctFormat: true
            },
        ]
    });

    var tableData = JSON.stringify(hot.getData());
    console.log(hot.getData());


    </script>
    <style>

        td.custom-cell {
            color: #fff;
            background-color: #37bc6c;
        }

        .handsontable th:nth-child(0) {
            background-color: aquamarine;
            font-weight: bold;
        }


        .custom-table tdata th:nth-child(even),
        .custom-table tbody tr:nth-child(odd) th {
            background-color: #d7f1e1;
        }
    </style>
