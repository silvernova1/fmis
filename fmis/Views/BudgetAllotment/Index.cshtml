@model fmis.Models.silver.BudgetAllotment
@using System.Globalization;

@{ ViewData["Title"] = "BudgetAllotment";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

@{
    decimal total_beginning_balance = 0;
    decimal total_obligated_amount = 0;
    decimal total_realignment_amount = 0;
    decimal total_remaining_balance = 0;

    var currentYear = User.FindFirstValue("YearlyRef");

    var lastYear = (int.Parse(User.FindFirstValue("YearlyRef")) - 1).ToString();

}

<style>

    table {
        border: 1px solid #CCC;
        border-collapse: collapse;
    }
</style>

<h3 class="grey lighter smaller">
    Budget Allotments @currentYear
</h3>
<hr />
<div class="row  pull-left">
    <div class="space-5"></div>
    <div class="col-xs-12 infobox-container">
        <div class="infobox infobox-green">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-money"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" @*id="total_beginning_balance"*@ style="font-size:11pt; color:grey;">
                    @ViewBag.CurrentYrAllotment_beginningBalance
                </span>
                <div class="infobox-content">
                    <span class="label label-success arrowed-in arrowed-in-right"> ALLOTMENT </span>
                </div>
            </div>
        </div>
        <div class="infobox infobox-blue">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-bar-chart-o"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                    @ViewBag.CurrentYrAllotment_obligatedAmount
                </span>
                <div class="infobox-content">
                    <span class="label label-primary arrowed-in arrowed-in-right"> OBLIGATED </span>
                </div>
            </div>
        </div>
        <div class="infobox infobox-red" style="width: 270px;">
            <div class="infobox-icon">
                <i class="ace-icon fa fa-calculator"></i>
            </div>
            <div class="infobox-data">
                <span class="infobox-data-number" @*id="total_remaining_balance"*@ style="font-size:11pt; color: grey;">
                    @ViewBag.CurrentYrAllotment_remainingBalance
                </span>
                <div class="infobox-content">
                    <span class="label label-danger arrowed-in arrowed-in-right"> UNOBLIGATED ALLOTMENT </span>
                </div>
            </div>
        </div>
    </div>
    <div class="vspace-12-sm"></div>
</div>
<br />
<br />
<br />
<br />
<div>
    <a class=" btn btn-sm btn-success" asp-action="Create">
        <i class="ace-icon fa fa-plus "></i>Create New
    </a>
</div>
<br />
@if (Model != null)
{
    <table class="table">
        <tbody>
            <tr class="bg-success">
                <td colspan="8" width="10px">
                    <strong style="font-size:15pt;">
                        CY: @User.FindFirstValue("YearlyRef")
                    </strong>
                </td>
            </tr>
            @foreach (var appropriation in ViewBag.AppropriationSource)
            {
                <tr class="bg-warning">
                    <td></td>
                    @if (appropriation.AppropriationSource == "CURRENT")
                    {
                        <td colspan="7" width="10px">
                            <strong style="font-size:12pt;">
                                CURRENT APPROPRIATIONS
                            </strong>
                        </td>
                    }
                    @if (appropriation.AppropriationSource == "CONAP")
                    {
                        <td colspan="7" width="10px">
                            <strong style="font-size:12pt;">
                                CONTINUING APPROPRIATIONS
                            </strong>
                        </td>
                    }
                </tr>
                <tr>
                    <th></th>
                    <th></th>
                    <th>
                        FUND CODE
                    </th>
                    <th>
                        ALLOTMENT CLASS
                    </th>
                    <th>
                        FOR GAA
                    </th>
                    <th>FOR SAA CY: @Model.Yearly_reference.YearlyReference  </th>

                    @if (appropriation.AppropriationSource == "CONAP")
                    {
                        <th>SAA @lastYear</th>
                    }
                </tr>
                @foreach (var allotment_class in ViewBag.AllotmentClass)
                {
                    <tr>
                        <td></td>
                        <td></td>
                        <td>
                            @allotment_class.Fund_Code
                        </td>
                        <td>
                            @allotment_class.Desc <br /> (@allotment_class.Allotment_Class)
                        </td>
                        @if (appropriation.AppropriationSource == "CURRENT")
                        {
                            <td>
                                <a class="btn btn-sm btn-default" asp-controller="FundSource" asp-route-AllotmentClassId="@allotment_class.Id" asp-route-AppropriationId="@appropriation.AppropriationId" asp-action="Index" asp-route-BudgetAllotmentId="@Model.BudgetAllotmentId">
                                    <i class="ace-icon fa fa-arrow-right"></i>GAA
                                </a>
                                <br />
                                <span class="grey">(ALLOTMENT): </span>
                                @{
                                    var fund_beginning_balance = Model.FundSources.Where(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.Original != true).Sum(x => x.Beginning_balance);
                                    total_beginning_balance += fund_beginning_balance;
                                }
                                <b class="green">@fund_beginning_balance.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                <span class="grey">(OBLIGATED): </span>
                                @{
                                    var fund_obligated_amount = Model.FundSources.Where(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.Original != true).Sum(x => x.obligated_amount);
                                    total_obligated_amount += fund_obligated_amount;
                                }
                                <b class="blue">@fund_obligated_amount.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                <span class="grey">(BALANCE): </span>
                                @{
                                    var fund_remaining_balance = Model.FundSources.Where(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.Original != true).Sum(x => x.Remaining_balance);
                                    total_remaining_balance += fund_remaining_balance;
                                }
                                <b class="red">@fund_remaining_balance.ToString("C", new CultureInfo("en-PH"))</b>


                                @if (Model.FundSources.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId))
                                {
                                    var check = Model.FundSources.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId && x.IsAddToNextAllotment == true) ? "checked" : "";
                                    <div class="checkbox">
                                        <label>
                                            <input name="form-field-checkbox" type="checkbox" class="ace" @check onclick="FundSetNextYear(this.checked, '@allotment_class.Id', '@appropriation.AppropriationId', '@Model.BudgetAllotmentId');">
                                            <span class="lbl">Set Next Year</span>
                                        </label>
                                    </div>
                                }
                            </td>
                        }
                        else
                        {
                            <td>
                                <a class="btn btn-sm btn-default" asp-controller="FundSource" asp-route-AllotmentClassId="@allotment_class.Id" asp-route-AppropriationId="@appropriation.AppropriationId" asp-action="Index" asp-route-BudgetAllotmentId="@Model.BudgetAllotmentId" asp-route-lastYear="true">
                                    <i class="ace-icon fa fa-arrow-right"></i>GAA
                                </a>
                                <br />
                                <span class="grey">(ALLOTMENT): </span>
                                @{
                                    var fund_beginning_balance = Model.FundSources.Where(x => x.AllotmentClassId == allotment_class.Id && x.BudgetAllotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true).Sum(x => x.Beginning_balance);
                                    total_beginning_balance += fund_beginning_balance;
                                }
                                <b class="green">@fund_beginning_balance.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                <span class="grey">(OBLIGATED): </span>
                                @{
                                    var fund_obligated_amount = Model.FundSources.Where(x => x.AllotmentClassId == allotment_class.Id && x.BudgetAllotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true).Sum(x => x.obligated_amount);
                                    total_obligated_amount += fund_obligated_amount;
                                }
                                <b class="blue">@fund_obligated_amount.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                <span class="grey">(BALANCE): </span>
                                @{
                                    var fund_remaining_balance = Model.FundSources.Where(x => x.AllotmentClassId == allotment_class.Id && x.BudgetAllotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true).Sum(x => x.Remaining_balance);
                                    total_remaining_balance += fund_remaining_balance;
                                }
                                <b class="red">@fund_remaining_balance.ToString("C", new CultureInfo("en-PH"))</b>


                                @if (Model.FundSources.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId))
                                {
                                    var check = Model.FundSources.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId && x.IsAddToNextAllotment == true) ? "checked" : "";
                                    <div class="checkbox">
                                        <label>
                                            <input name="form-field-checkbox" type="checkbox" class="ace" @check onclick="FundSetNextYear(this.checked, '@allotment_class.Id', '@appropriation.AppropriationId', '@Model.BudgetAllotmentId');">
                                            <span class="lbl">Set Next Year</span>
                                        </label>
                                    </div>
                                }
                            </td>
                        }
                        
                        <td>
                            <a class="btn btn-sm btn-default" asp-controller="SubAllotment" asp-route-AllotmentClassId="@allotment_class.Id" asp-route-AppropriationId="@appropriation.AppropriationId" asp-action="Index" asp-route-BudgetAllotmentId="@Model.BudgetAllotmentId">
                                <i class="ace-icon fa fa-plus"></i>SAA
                            </a>
                            <br />
                            <span class="grey">(ALLOTMENT):</span>
                            @{
                                var sub_beginning_balance = Model.SubAllotment.Where(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.Budget_allotment.Yearly_reference.YearlyReference == currentYear)?.Sum(x => x.Beginning_balance);
                            }
                            <b class="green">@sub_beginning_balance?.ToString("C", new CultureInfo("en-PH"))</b>
                            <br />
                            <span class="grey">(OBLIGATED): </span>
                            @{
                                var sub_obligated_amount = Model.SubAllotment.Where(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.Budget_allotment.Yearly_reference.YearlyReference == currentYear)?.Sum(x => x.obligated_amount);
                            }
                            <b class="blue">@sub_obligated_amount?.ToString("C", new CultureInfo("en-PH"))</b>
                            <br />
                            <span class="grey">(BALANCE): </span>
                            @{
                                var sub_remaining_balance = Model.SubAllotment.Where(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.Budget_allotment.Yearly_reference.YearlyReference == currentYear)?.Sum(x => x.Remaining_balance);
                            }
                            <b class="red">@sub_remaining_balance?.ToString("C", new CultureInfo("en-PH"))</b>
                            <br />
                            @if (Model.SubAllotment.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId))
                            {
                                var check = Model.SubAllotment.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId && x.Budget_allotment.Yearly_reference.YearlyReference == currentYear && x.IsAddToNextAllotment == true) ? "checked" : "";
                                <div class="checkbox">
                                    <label>
                                        <input name="form-field-checkbox" type="checkbox" class="ace" @check onclick="SetNextYear(this.checked, '@allotment_class.Id', '@appropriation.AppropriationId', '@Model.BudgetAllotmentId');">
                                        <span class="lbl">Set Next Year</span>
                                    </label>
                                </div>
                            }
                        </td>

                        <!--CONAP LAST YEAR-->
                        @if (appropriation.AppropriationSource == "CONAP")
                        {
                            <td>
                                <a class="btn btn-sm btn-default" asp-controller="SubAllotment" asp-action="Index" asp-route-AllotmentClassId="@allotment_class.Id" asp-route-AppropriationId="@appropriation.AppropriationId" asp-route-BudgetAllotmentId="@Model.BudgetAllotmentId" asp-route-lastYear="true">
                                    <i class="ace-icon fa fa-plus"></i>SAA
                                </a>
                                <br />
                                <span class="grey">(ALLOTMENT):</span>
                                @{
                                    var sub_beginning_balanceConap = Model.SubAllotment.Where(x => x.AllotmentClassId == allotment_class.Id && x.Budget_allotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true)?.Sum(x => x.Beginning_balance);
                                }
                                <b class="green">@sub_beginning_balanceConap.Value.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                <span class="grey">(OBLIGATED): </span>
                                @{
                                    var sub_obligated_amountConap = Model.SubAllotment.Where(x => x.AllotmentClassId == allotment_class.Id && x.Budget_allotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true)?.Sum(x => x.obligated_amount);
                                }
                                <b class="blue">@sub_obligated_amountConap.Value.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                <span class="grey">(BALANCE): </span>
                                @{
                                    var sub_remaining_balanceConap = Model.SubAllotment.Where(x => x.AllotmentClassId == allotment_class.Id && x.Budget_allotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true)?.Sum(x => x.Remaining_balance);
                                }
                                <b class="red">@sub_remaining_balanceConap.Value.ToString("C", new CultureInfo("en-PH"))</b>
                                <br />
                                @if (Model.SubAllotment.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId))
                                {
                                    var check = Model.SubAllotment.Any(x => x.AllotmentClassId == allotment_class.Id && x.AppropriationId == appropriation.AppropriationId && x.BudgetAllotmentId == Model.BudgetAllotmentId && x.Budget_allotment.Yearly_reference.YearlyReference == lastYear && x.IsAddToNextAllotment == true) ? "checked" : "";
                                    <div class="checkbox">
                                        <label>
                                            <input name="form-field-checkbox" type="checkbox" class="ace" @check onclick="SetNextYear(this.checked, '@allotment_class.Id', '@appropriation.AppropriationId', '@Model.BudgetAllotmentId');">
                                            <span class="lbl">Set Next Year</span>
                                        </label>
                                    </div>
                                }
                            </td>
                        }
                        <!--CONAP LAST YEAR-->
                    </tr>
                }
            }
        </tbody>
    </table>
}
else{
    <div class="alert alert-block alert-danger">
        <i class="ace-icon fa fa-warning red"></i>
        No Records found
    </div>
}
<script>

    $("#total_beginning_balance").html("@total_beginning_balance.ToString("C", new CultureInfo("en-PH"))");
    $("#total_obligated_amount").html("@total_obligated_amount.ToString("C", new CultureInfo("en-PH"))");
    $("#total_realignment_amount").html("@total_realignment_amount.ToString("C", new CultureInfo("en-PH"))");
    $("#total_remaining_balance").html("@total_remaining_balance.ToString("C", new CultureInfo("en-PH"))");


    function SetNextYear(set, allotmentClassId, appropriationId, budgetAllotmentId){
        console.log(set);
        $.ajax({
            url: '@Url.Action("CheckNextYear","BudgetAllotment")',
            data:{
                allotmentClassId: allotmentClassId,
                appropriationId: appropriationId,
                budgetAllotmentId: budgetAllotmentId,
                addToNext: set
            },
            async: true,
            method: 'POST'
        })
    }

    function FundSetNextYear(set, allotmentClassId, appropriationId, budgetAllotmentId){
        console.log(set);
        $.ajax({
            url: '@Url.Action("FundCheckNextYear","BudgetAllotment")',
            data:{
                allotmentClassId: allotmentClassId,
                appropriationId: appropriationId,
                budgetAllotmentId: budgetAllotmentId,
                addToNext: set
            },
            async: true,
            method: 'POST'
        })
    }
</script>

