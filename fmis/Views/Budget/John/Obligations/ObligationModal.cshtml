@model fmis.Models.Obligation


<form>

    <table class="table">
        <tbody>
            <tr>
                <td class="col-sm-1"><strong>Particulars</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10">
                    @Html.DisplayFor(model => model.Particulars)
                </td>
            </tr>
            <tr>
                <td class="col-sm-1"><strong>Payee</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10">
                    @Html.DisplayFor(model => model.Payee)
                </td>
            </tr>
            <tr>
                <td class="col-sm-1"><strong>Address</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10">
                    @Html.DisplayFor(model => model.Address)
                </td>
            </tr>
            <tr>
                <td class="col-sm-1"><strong>Fund Source</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10">
                    @Html.DisplayFor(model => model.Fund_source)
                </td>
            </tr>
            <tr>
                <td class="col-sm-1"><strong>PR #</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10">
                    @Html.DisplayFor(model => model.Pr_no)
                </td>
            </tr>
            <tr>
                <td class="col-sm-1"><strong>Total Amount</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10"><strong id="uacs_total"></strong></td>
            </tr>
            <tr>
                <td class="col-sm-1"><strong>Dibursements</strong></td>
                <td class="col-sm-1"><strong>:</strong></td>
                <td class="col-sm-10"><strong id="uacs_disbursment"></strong></td>
            </tr>
        </tbody>
    </table>
</form>

<input type="hidden" class="uacsamount" value="@ViewBag.temp">
<input type="hidden" class="uacs" value="@ViewBag.uacs">
<br />
<input id="search_field2" style="float: left" type="search" hidden placeholder="Search" />
<br />
<br />
<br />
<p style="margin-left: 5px; color: cornflowerblue; ">Please ENTER first then CTRL + S for saving the data.</p>
<div id="uacs_amount" class="hot handsontable htColumnHeaders"></div>
<br />
<div class="controls" hidden>
    <button id="export-file">Download CSV</button>
</div>


@*<div id="example1" class="hot handsontable htColumnHeaders"></div>*@


<script>
     @*
    function getCarData() {
        return [
            ["Tesla", 2017, "black", "black"],
            ["Nissan", 2018, "blue", "blue"],
            ["Chrysler", 2019, "yellow", "black"],
            ["Volvo", 2020, "white", "gray"]
        ];
    }
    const container = document.getElementById('example1');

    const hot = new Handsontable(container, {
        data: getCarData(),
        colHeaders: ['Car', 'Year', 'Chassis color', 'Bumper color'],
        columns: [
            {},
            { type: 'numeric' },
            {
                type: 'dropdown',
                source: ['yellow', 'red', 'orange', 'green', 'blue', 'gray', 'black', 'white']
            },
            {
                type: 'dropdown',
                source: ['yellow', 'red', 'orange', 'green', 'blue', 'gray', 'black', 'white']
            }
        ]
    });*@

    var uacsamount = $.parseJSON($(".uacsamount").val());
    const data = [];
    var counter = 0;
    $.each(uacsamount, function () {
        data[counter] = [this.Account_title, this.Expense_code, this.Amount, this.Total_disbursement, this.Total_net_amount, this.Total_tax_amount, this.Total_others, this.Id]
        counter++;
    })

    var uacs = $.parseJSON($(".uacs").val());
    const uacs_data = [];
    var uacs_counter = 0;
    $.each(uacs, function () {
        uacs_data[uacs_counter] = this.Account_title
        uacs_counter++;
    })

    console.log(uacs_data);

    const searchField = document.querySelector('#search_field2');
    const button = document.querySelector('#export-file');
    const container = document.getElementById('uacs_amount');
    const hot = new Handsontable(container, {
        data: data,
        rowHeaders: true,
        colHeaders: true,
        colWidths: [400, 250, 100, 150, 150, 150, 150, 150, 150],
        stretchH: 'all',
        height: '250px',
        search: {
            searchResultClass: 'search-result-custom'
        },
        contextMenu: ['row_above', 'row_below', 'remove_row'],
        beforeRemoveRow: function (index, column) {
            var selection = this.getSelected();
            var holder_data = this.getData();
            var holder_id = holder_data[selection[0][0]][7];
            if (holder_id) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteUacsamount", "Uacsamounts")',
                    dataType: "JSON",
                    data: { id: holder_id },
                    success: function (output) {
                        console.log(output);
                    }
                });
            }

            Lobibox.notify("warning", {
                msg: "Your selected row was remove",
                sound: false
            });

        },
        hiddenColumns: {
            columns: [7],
            indicators: true
        },

        licenseKey: 'non-commercial-and-evaluation', // for non-commercial use only
        dataSchema: { Account_title: null, Expense_code: null, Amount: null, Total_disbursement: null, Total_net_amount: null, Total_tax_amount: null, Total_others: null },
        columns: [
            {
                data: 'Account_title ', type: 'text',
            },
            { data: 'Expense_code', type: 'text' },
            { data: 'Amount', type: 'numeric' },
            { data: 'Total_disbursement', type: 'numeric' },
            { data: 'Total_net_amount', type: 'numeric' },
            { data: 'Total_tax_amount', type: 'numeric' },
            { data: 'Total_others', type: 'numeric' },
            { data: 'Id ', type: 'text' },

        ]
    });

    Handsontable.dom.addEvent(searchField, 'keyup', function (event) {
        const search = hot.getPlugin('search');
        const queryResult = search.query(this.value);

        console.log(queryResult);
        hot.render();
    });

    const exportPlugin = hot.getPlugin('exportFile');

    button.addEventListener('click', () => {
        exportPlugin.downloadFile('csv', {
            bom: false,
            columnDelimiter: ',',
            columnHeaders: true,
            exportHiddenColumns: true,
            exportHiddenRows: true,
            fileExtension: 'csv',
            filename: 'UACS',
            mimeType: 'text/csv',
            rowDelimiter: '\r\n',
            rowHeaders: true
        });
    });



    hot.updateSettings({
        colHeaders: ['EXPENSE TITLE', 'CODE', 'AMOUNT', 'TOTAL DISBURSEMENT', 'TOTAL NET AMOUNT', 'TOTAL TAX AMOUNT', 'TOTAL OTHERS', 'ID'],
        columns: [
            {
                type: 'dropdown',
                source: uacs_data
            },
            {

            },
            {

            },
            {

            },
            {

            },
            {

            },
            {

            },
            {

            },

        ],
    });

    var tableData = JSON.stringify(hot.getSourceData());
    console.log(hot.getSourceData());

   var obligation_id = @Html.DisplayFor(model => model.Id);
    document.onkeydown = function (e) {
        if (e.ctrlKey && e.keyCode === 83) {
            $('#loading_modal').modal('show');

            var json = [];
            $.each(hot.getSourceData(), function () {
                json.push({ ObligationId: obligation_id, Account_title: this[0], Expense_code: this[1], Amount: this[2], Total_disbursement: this[3], Total_net_amount: this[4], Total_tax_amount: this[5], Total_others: this[6], Id: this[7] });
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveUacsamount", "Uacsamounts")',
                dataType: "JSON",
                data: { data: json },
                success: function (output) {
                    $('#loading_modal').modal('hide');
                    Lobibox.notify("success", {
                        msg: "Successfully Saved...",
                        sound: false
                    });
                    console.log(output);
                }
            });

            return false;
        }
    };




</script>

