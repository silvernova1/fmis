@model fmis.Models.silver.BudgetAllotment
@using System.Globalization;
@{
    ViewData["Title"] = "FundSource";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currentYear = User.FindFirstValue("YearlyRef");
    var lastYear = int.Parse(User.FindFirstValue("YearlyRef")) - 1;
    var items = Model.FundSources.Where(x => x.BudgetAllotment.Yearly_reference.YearlyReference == lastYear.ToString());
    var lastYearFunds = Model.FundSources.Where(x => x.BudgetAllotment.Yearly_reference.YearlyReference == currentYear.ToString());
    var overallAllotment = items.Sum(x=>x.Beginning_balance) + lastYearFunds.Sum(x=>x.Beginning_balance);
    var overallObligated = items.Sum(x => x.obligated_amount) + lastYearFunds.Sum(x => x.obligated_amount);
    //if (ViewBag.LastYear)
    //{
    //items = Model.FundSources.Where(x => x.BudgetAllotment.Yearly_reference.YearlyReference == lastYear.ToString());
    //}
}

<style type="text/css">
    body {
        font-family: sans-serif;
        font-size: 10pt;
    }

    table {
        border: 1px solid #ccc;
        border-collapse: collapse;
        background-color: #fff;
    }

        table th {
            background-color: #009879;
            color: #fff;
        }

        table th, table td {
            padding: 5px;
            border: 1px solid #ccc;
        }

        table, table table td {
            border: 0px solid #ccc;
        }

    .Pager span {
        text-align: center;
        color: #333;
        display: inline-block;
        width: 20px;
        background-color: #B8DBFD;
        margin-right: 3px;
        line-height: 150%;
        border: 1px solid #B8DBFD;
    }

    .Pager a {
        text-align: center;
        display: inline-block;
        width: 20px;
        background-color: #ccc;
        color: #333;
        border: 1px solid #ccc;
        margin-right: 3px;
        line-height: 150%;
        text-decoration: none;
    }

    .hr {
        border: 1px solid black;
    }

    #nav {
        font-size: 12pt;
    }

    .pbutton {
        margin-left: 1px;
    }
</style>



@if (Model.FundSources.Count() > 0)
{
    <h3 class="grey lighter smaller">
        General Appropriations Act (GAA)
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Model.Yearly_reference.YearlyReference
        </small>
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Model.FundSources.FirstOrDefault().Appropriation.AppropriationSource
        </small>
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Model.FundSources.FirstOrDefault().AllotmentClass.Allotment_Class
        </small>

    </h3>
}
<hr />
<div class="row  pull-left">
    <div class="space-5"></div>
    @if (Model.FundSources.Where(x => x.BudgetAllotment.Yearly_reference.YearlyReference == lastYear.ToString()).Any())
    {
        <div class="col-xs-12 infobox-container">
            <div class="infobox infobox-green">
                <div class="infobox-icon">
                    <i class="ace-icon fa fa-money"></i>
                </div>
                <div class="infobox-data">
                    <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                        @overallAllotment.ToString("C", new CultureInfo("en-PH"))
                    </span>
                    <div class="infobox-content">
                        <span class="label label-success arrowed-in arrowed-in-right"> ALLOTMENT </span>
                    </div>
                </div>
            </div>
            <div class="infobox infobox-blue">
                <div class="infobox-icon">
                    <i class="ace-icon fa fa-bar-chart-o"></i>
                </div>
                <div class="infobox-data">
                    <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                        @overallObligated.ToString("C", new CultureInfo("en-PH"))
                    </span>
                    <div class="infobox-content">
                        <span class="label label-primary arrowed-in arrowed-in-right"> OBLIGATED </span>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="col-xs-12 infobox-container">
            <div class="infobox infobox-green">
                <div class="infobox-icon">
                    <i class="ace-icon fa fa-money"></i>
                </div>
                <div class="infobox-data">
                    <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                        @Model.FundSources.Sum(x => x.Beginning_balance).ToString("C", new CultureInfo("en-PH"))
                    </span>
                    <div class="infobox-content">
                        <span class="label label-success arrowed-in arrowed-in-right"> ALLOTMENT </span>
                    </div>
                </div>
            </div>
            <div class="infobox infobox-blue">
                <div class="infobox-icon">
                    <i class="ace-icon fa fa-bar-chart-o"></i>
                </div>
                <div class="infobox-data">
                    <span class="infobox-data-number" style="font-size:11pt; color:grey;">
                        @Model.FundSources.Sum(x => x.obligated_amount).ToString("C", new CultureInfo("en-PH"))
                    </span>
                    <div class="infobox-content">
                        <span class="label label-primary arrowed-in arrowed-in-right"> OBLIGATED </span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<br />
<br />
<br />
<br />
<div class="modal" id="createModal" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body" id="fund_source_create">

            </div>
        </div>
    </div>
</div>
<div class="modal" id="editModal" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body" id="fund_source_edit">

            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="DeleteModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
        </div>
    </div>
</div>

<form method="get" asp-action="Index" asp-controller="FundSource" id="search_form">
    <input type="hidden" name="AllotmentClassId" value="@ViewBag.AllotmentClassId" />
    <input type="hidden" name="AppropriationId" value="@ViewBag.AppropriationId" />
    <input type="hidden" name="BudgetAllotmentId" value="@ViewBag.BudgetAllotmentId" />

    <span class="pull-right">
        <button type="button" class="btn btn-sm btn-success btn-default" style="margin-bottom: 3px;" onclick="viewAllClicked();">
            View All
        </button>
        <input type="search" placeholder="Enter keyword..." class="form-group" name="search" id="search" value="@ViewBag.Search" style="width: 340px;" />
        <button type="submit" class="btn btn-sm btn-default" style="margin-bottom: 3px;">
            <i class="ace-icon fa fa-search "></i> Search
        </button>
    </span>
</form>

<p>
    <button type="button" asp-controller="FundSource" asp-action="Create" class="btn btn-success btn-sm" onclick="createFundSource(@Model.BudgetAllotmentId)">
        <i class="ace-icon fa fa-plus "></i>Create New
    </button> 
    <a class=" btn btn-primary btn-sm" asp-controller="BudgetAllotment" asp-action="Index">
        <span class="glyphicon glyphicon-arrow-left"></span> Back to Budget Allotment
    </a>
</p>


@if (Model.FundSources.Count() > 0)
{
    <table class="table" id="data">
        <thead>
            <tr>
                <th>               
                    PAP TITLE
                </th>
                <th>
                    FUND SOURCE TITLE
                </th>
                <th>
                    RESPONSIBILITY CENTER
                </th>
                <th>
                    ACTIONS
                </th>
                <th>
                    ALLOTMENT
                </th>
                <th>
                    OBLIGATED
                </th>
                <th>
                    UNOBLIGATED ALLOTMENT
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.FundSources.OrderByDescending(x => x.CreatedAt))
            {
                var check = item.IsAddToNextAllotment ? "checked" : "";
                var checkReusedConap = item.ReUsedConap ? "checked" : "";

                char[] trim = { 'C', 'O', 'N', 'A', 'P', ' ' };
                var conap = item.FundSourceTitle.TrimStart(trim);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Prexc.pap_title)
                    </td>
                    @if (item.IsAddToNextAllotment == true && item.BudgetAllotment.Yearly_reference.YearlyReference == lastYear.ToString())
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.FundSourceTitle)
                        </td>
                    }
                    else
                    {
                        <td>
                            @conap
                        </td>
                    }
                    <td>
                        @item.RespoCenter.Respo
                    </td>
                    <td>
                        <button class="btn btn-primary btn-xs" onclick="getEditFundSource(@Model.BudgetAllotmentId,@item.FundSourceId)" data-bs-toggle="tooltip" title="Edit"> <span class="glyphicon glyphicon-edit"></span>  </button>

                        <a asp-controller="FundSource" asp-action="Delete" asp-route-id="@item.FundSourceId" asp-route-budget_id="@ViewBag.budget_id" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#DeleteModalCenter" data-bs-toggle="tooltip" title="Delete"> <span class="glyphicon glyphicon-trash"></span> </a>
                        <a asp-controller="FundsRealignment" asp-route-fundsource_id="@item.FundSourceId" asp-route-budget_id="@ViewBag.budget_id" asp-action="Index" class="btn btn-info btn-xs" data-bs-toggle="tooltip" title="GAA Realignment"><span class="glyphicon glyphicon-transfer"></span>  </a>
                        <a asp-controller="FundTransferedTo" asp-route-fundsource_id="@item.FundSourceId" asp-route-BudgetId="@ViewBag.BudgetAllotmentId" asp-action="Index" class="btn btn-warning btn-xs" data-bs-toggle="tooltip" title="GAA TransferedTo"> <span class="glyphicon glyphicon-share-alt"></span></a>
                        @if (item.IsAddToNextAllotment == true && item.BudgetAllotment.Yearly_reference.YearlyReference == lastYear.ToString())
                        {
                            @*<div class="checkbox">
                                <label>
                                    <input name="form-field-checkbox" type="checkbox" @check class="ace" onclick="AddNextYr(this.checked, '@item.FundSourceId')">
                                    <span class="lbl">For Conap</span>
                                </label>
                            </div>*@
                            <div class="checkbox">
                                <label>
                                    <input name="form-field-checkbox" type="checkbox" @checkReusedConap class="ace" onclick="ReusedConap(this.checked, '@item.FundSourceId')">
                                    <span class="lbl">For Conap</span>
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="checkbox">
                                <label>
                                    <input name="form-field-checkbox" type="checkbox" @check class="ace" onclick="AddNextYr(this.checked, '@item.FundSourceId')">
                                    <span class="lbl">For Conap</span>
                                </label>
                            </div>
                        }                       

                    </td>
                    <td>
                        <b class="green">
                            <span>@item.Beginning_balance.ToString("C", new CultureInfo("en-PH"))</span>
                        </b>
                    </td>
                    <td>
                        <b class="blue">
                            <span>@item.obligated_amount.ToString("C", new CultureInfo("en-PH"))</span>
                        </b>
                    </td>
                    <td>
                        <b class="red">
                            <span>@item.Remaining_balance.ToString("C", new CultureInfo("en-PH"))</span>
                        </b>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-block alert-danger">
        <i class="ace-icon fa fa-warning red"></i>
        No Records found
    </div>
}

<script>

    function viewAllClicked() {
        $('#search').val('');
        $('#search_form').submit();
    }

     $(document).ready(function () {
        $('[data-bs-toggle="tooltip"]').tooltip();
    });

    function AddNextYr(set, fundsourceId){
        $.ajax({
            url: '@Url.Action("CheckNextYear","FundSource")',
            data: {
                fundsourceId: fundsourceId,
                addToNext: set
            },
            async: true,
            method: 'POST',
            success: function(result){
                console.log(result);
            }
        })
    }

    function ReusedConap(set, fundsourceId) {
        $.ajax({
            url: '@Url.Action("CheckReusedConap","FundSource")',
            data: {
                fundsourceId: fundsourceId,
                reusedConap: set
            },
            async: true,
            method: 'POST',
            success: function (result) {
                console.log(result);
            }
        })
    }

     function createFundSource(BudgetAllotmentId) {
         $("#createModal").modal({ backdrop: 'static', keyboard: false });
         $("#fund_source_create").html(loading);
         var AllotmentClassId = @ViewBag.AllotmentClassId;
         var AppropriationId = @ViewBag.AppropriationId;
         var url = '@Url.Action("Create", "FundSource")';
         url += "?AllotmentClassId="+AllotmentClassId+"&AppropriationId="+AppropriationId+"&BudgetAllotmentId=" + BudgetAllotmentId;
        console.log(url);
         $.get(url, function (result) {
            setTimeout(function () {
                $("#fund_source_create").html(result);
            }, 500);
         });
     }

     function getEditFundSource(BudgetAllotmentId, fund_source_id) {
         $("#editModal").modal({ backdrop: 'static', keyboard: false });
         $("#fund_source_edit").html(loading);
         var AllotmentClassId = @ViewBag.AllotmentClassId;
         var AppropriationId = @ViewBag.AppropriationId;
         var url = '@Url.Action("Edit", "FundSource")';
         //url += "?budget_id=" + BudgetAllotmentId + "&fund_source_id=" + fund_source_id
         url += "?AllotmentClassId=" + AllotmentClassId + "&AppropriationId=" + AppropriationId + "&BudgetAllotmentId=" + BudgetAllotmentId + "&fund_source_id=" + fund_source_id;
         $.get(url, function (result) {
            setTimeout(function () {
                $("#fund_source_edit").html(result);
            }, 500);
         });
     }

     function deleteFundSource(BudgetAllotmentId) {
         $("#deleteModal").modal({ backdrop: 'static', keyboard: false });
         $("#fund_source_delete").html(loading);
         var url = '@Url.Action("Delete", "FundSource")';
         url += "?budget_id=" + BudgetAllotmentId
         $.get(url, function (result) {
            setTimeout(function () {
                $("#fund_source_delete").html(result);
            }, 500);
         });
     }

    let generate_token = () => {
        let s4 = () => {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    }

    function fundSourceToken() {
        fundsource_token = generate_token();
        $("#funds_input_token").val(fundsource_token);
    }


    $(document).ready(function () {
        $('#data').after('<div id="nav"></div>');
        var rowsShown = 10;
        var rowsTotal = $('#data tbody tr').length;
        var numPages = rowsTotal / rowsShown;
        for (i = 0; i < numPages; i++) {
            var pageNum = i + 1;
            $('#nav').append('<a href="#" class="pbutton btn-xs btn-info"  rel="' + i + '">' + pageNum + '</a>');
        }
        $('#data tbody tr').hide();
        $('#data tbody tr').slice(0, rowsShown).show();
        $('#nav a:first').addClass('active');
        $('#nav a').bind('click', function () {

            $('#nav a').removeClass('active');
            $(this).addClass('active');
            var currPage = $(this).attr('rel');
            var startItem = currPage * rowsShown;
            var endItem = startItem + rowsShown;
            $('#data tbody tr').css('opacity', '0.0').hide().slice(startItem, endItem).
                css('display', 'table-row').animate({ opacity: 1 }, 300);
        });
    });

</script>



